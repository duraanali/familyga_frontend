{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar OS = Platform.OS;\nvar Dialog = function (_Component) {\n  _inherits(Dialog, _Component);\n  var _super = _createSuper(Dialog);\n  function Dialog() {\n    _classCallCheck(this, Dialog);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Dialog, [{\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props = this.props,\n        children = _this$props.children,\n        contentStyle = _this$props.contentStyle;\n      return _jsx(View, {\n        style: [{\n          width: '100%',\n          flexShrink: 1,\n          padding: 24,\n          paddingTop: 20\n        }, contentStyle],\n        children: children\n      });\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle() {\n      var _this$props2 = this.props,\n        title = _this$props2.title,\n        titleStyle = _this$props2.titleStyle;\n      var textAlign = OS === 'ios' ? \"center\" : null;\n      if (title) return _jsx(Text, {\n        style: [{\n          textAlign: textAlign,\n          color: \"#000000DD\",\n          fontSize: 20,\n          margin: 24,\n          marginBottom: 0\n        }, titleStyle],\n        children: title\n      });\n    }\n  }, {\n    key: \"renderButtons\",\n    value: function renderButtons() {\n      var _this$props3 = this.props,\n        buttons = _this$props3.buttons,\n        buttonsStyle = _this$props3.buttonsStyle;\n      var containerStyle = OS === 'ios' ? {} : {\n        width: '100%',\n        paddingLeft: 24,\n        paddingRight: 8,\n        paddingTop: 8,\n        paddingBottom: 8\n      };\n      if (buttons) return _jsx(View, {\n        style: [containerStyle, buttonsStyle],\n        children: buttons\n      });\n    }\n  }, {\n    key: \"_renderOutsideTouchable\",\n    value: function _renderOutsideTouchable(onTouch) {\n      var view = _jsx(View, {\n        style: {\n          flex: 1,\n          width: '100%'\n        }\n      });\n      if (!onTouch) return view;\n      return _jsx(TouchableWithoutFeedback, {\n        onPress: onTouch,\n        style: {\n          flex: 1,\n          width: '100%'\n        },\n        children: view\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n        dialogStyle = _this$props4.dialogStyle,\n        visible = _this$props4.visible,\n        animationType = _this$props4.animationType,\n        onRequestClose = _this$props4.onRequestClose,\n        onShow = _this$props4.onShow,\n        onOrientationChange = _this$props4.onOrientationChange,\n        onTouchOutside = _this$props4.onTouchOutside,\n        overlayStyle = _this$props4.overlayStyle,\n        supportedOrientations = _this$props4.supportedOrientations,\n        keyboardDismissMode = _this$props4.keyboardDismissMode,\n        keyboardShouldPersistTaps = _this$props4.keyboardShouldPersistTaps,\n        contentInsetAdjustmentBehavior = _this$props4.contentInsetAdjustmentBehavior;\n      var dialogBackgroundColor = OS === 'ios' ? \"#e8e8e8\" : \"#ffffff\";\n      var dialogBorderRadius = OS === 'ios' ? 5 : 1;\n      return _jsx(Modal, {\n        animationType: animationType,\n        transparent: true,\n        visible: visible,\n        onRequestClose: onRequestClose,\n        onShow: onShow,\n        onOrientationChange: onOrientationChange,\n        supportedOrientations: supportedOrientations,\n        children: _jsx(ScrollView, {\n          bounces: false,\n          style: {\n            flex: 1\n          },\n          contentContainerStyle: {\n            flex: 1\n          },\n          keyboardDismissMode: keyboardDismissMode,\n          keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n          contentInsetAdjustmentBehavior: contentInsetAdjustmentBehavior,\n          children: _jsx(View, {\n            style: [{\n              flex: 1,\n              backgroundColor: \"#000000AA\",\n              padding: 24\n            }, overlayStyle],\n            children: _jsxs(SafeAreaView, {\n              style: {\n                flex: 1\n              },\n              children: [this._renderOutsideTouchable(onTouchOutside), _jsxs(View, {\n                style: [{\n                  backgroundColor: dialogBackgroundColor,\n                  width: '100%',\n                  maxHeight: '100%',\n                  shadowOpacity: 0.24,\n                  borderRadius: dialogBorderRadius,\n                  elevation: 4,\n                  shadowOffset: {\n                    height: 4,\n                    width: 2\n                  }\n                }, dialogStyle],\n                children: [this.renderTitle(), this.renderContent(), this.renderButtons()]\n              }), this._renderOutsideTouchable(onTouchOutside)]\n            })\n          })\n        })\n      });\n    }\n  }]);\n  return Dialog;\n}(Component);\nDialog.defaultProps = {\n  visible: false,\n  onRequestClose: function onRequestClose() {\n    return null;\n  },\n  contentInsetAdjustmentBehavior: 'never'\n};\nexport default Dialog;","map":{"version":3,"names":["React","Component","Modal","View","TouchableWithoutFeedback","Text","Platform","SafeAreaView","ScrollView","jsx","_jsx","jsxs","_jsxs","OS","Dialog","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","renderContent","_this$props","props","children","contentStyle","style","width","flexShrink","padding","paddingTop","renderTitle","_this$props2","title","titleStyle","textAlign","color","fontSize","margin","marginBottom","renderButtons","_this$props3","buttons","buttonsStyle","containerStyle","paddingLeft","paddingRight","paddingBottom","_renderOutsideTouchable","onTouch","view","flex","onPress","render","_this$props4","dialogStyle","visible","animationType","onRequestClose","onShow","onOrientationChange","onTouchOutside","overlayStyle","supportedOrientations","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","dialogBackgroundColor","dialogBorderRadius","transparent","bounces","contentContainerStyle","backgroundColor","maxHeight","shadowOpacity","borderRadius","elevation","shadowOffset","height","defaultProps"],"sources":["/Users/duraanali/Pictures/Familyga App/frontend/node_modules/react-native-simple-dialogs/src/Dialog.js"],"sourcesContent":["/**\n* MIT License\n* \n* Copyright (c) 2017 Douglas Nassif Roma Junior\n* \n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n* \n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n* \n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE. \n*/\n\nimport React, { Component } from 'react'\nimport {\n    Modal,\n    View,\n    TouchableWithoutFeedback,\n    Text,\n    Platform,\n    SafeAreaView,\n    ScrollView\n} from 'react-native'\n\nconst { OS } = Platform;\n\nclass Dialog extends Component {\n\n    renderContent() {\n        const { children, contentStyle } = this.props;\n\n        return (\n            <View style={[{\n                width: '100%',\n                flexShrink: 1,\n                padding: 24,\n                paddingTop: 20\n            }, contentStyle]}>\n                {children}\n            </View>\n        )\n    }\n\n    renderTitle() {\n        const { title, titleStyle } = this.props;\n\n        const textAlign = OS === 'ios' ? \"center\" : null;\n\n        if (title)\n            return (\n                <Text style={[{\n                    textAlign,\n                    color: \"#000000DD\",\n                    fontSize: 20,\n                    margin: 24,\n                    marginBottom: 0\n                }, titleStyle]}>\n                    {title}\n                </Text>\n            )\n    }\n\n    renderButtons() {\n        const { buttons, buttonsStyle } = this.props;\n\n        const containerStyle = OS === 'ios' ?\n            {} :\n            {\n                width: '100%',\n                paddingLeft: 24,\n                paddingRight: 8,\n                paddingTop: 8,\n                paddingBottom: 8\n            };\n\n        if (buttons)\n            return (\n                <View style={[containerStyle, buttonsStyle]}>\n                    {buttons}\n                </View>\n            )\n    }\n\n    _renderOutsideTouchable(onTouch) {\n        const view = <View style={{ flex: 1, width: '100%' }} />\n\n        if (!onTouch) return view;\n\n        return (\n            <TouchableWithoutFeedback onPress={onTouch} style={{ flex: 1, width: '100%' }}>\n                {view}\n            </TouchableWithoutFeedback>\n        )\n    }\n\n    render() {\n        const {\n            dialogStyle, visible, animationType, onRequestClose, onShow,\n            onOrientationChange, onTouchOutside, overlayStyle, supportedOrientations,\n            keyboardDismissMode, keyboardShouldPersistTaps, contentInsetAdjustmentBehavior,\n        } = this.props;\n\n        const dialogBackgroundColor = OS === 'ios' ? \"#e8e8e8\" : \"#ffffff\";\n        const dialogBorderRadius = OS === 'ios' ? 5 : 1;\n\n        return (\n            <Modal\n                animationType={animationType}\n                transparent={true}\n                visible={visible}\n                onRequestClose={onRequestClose}\n                onShow={onShow}\n                onOrientationChange={onOrientationChange}\n                supportedOrientations={supportedOrientations}\n            >\n                <ScrollView\n                    bounces={false}\n                    style={{\n                        flex: 1,\n                    }}\n                    contentContainerStyle={{\n                        flex: 1,\n                    }}\n                    keyboardDismissMode={keyboardDismissMode}\n                    keyboardShouldPersistTaps={keyboardShouldPersistTaps}\n                    contentInsetAdjustmentBehavior={contentInsetAdjustmentBehavior}\n                >\n                    <View style={[{\n                        flex: 1,\n                        backgroundColor: \"#000000AA\",\n                        padding: 24\n                    }, overlayStyle]}>\n                        <SafeAreaView style={{ flex: 1 }}>\n                            {this._renderOutsideTouchable(onTouchOutside)}\n\n                            <View style={[{\n                                backgroundColor: dialogBackgroundColor,\n                                width: '100%',\n                                maxHeight: '100%',\n                                shadowOpacity: 0.24,\n                                borderRadius: dialogBorderRadius,\n                                elevation: 4,\n                                shadowOffset: {\n                                    height: 4,\n                                    width: 2\n                                }\n                            }, dialogStyle]}>\n\n                                {this.renderTitle()}\n\n                                {this.renderContent()}\n\n                                {this.renderButtons()}\n\n                            </View>\n\n                            {this._renderOutsideTouchable(onTouchOutside)}\n                        </SafeAreaView>\n                    </View>\n                </ScrollView>\n            </Modal>\n        )\n    }\n}\n\nDialog.defaultProps = {\n    visible: false,\n    onRequestClose: () => null,\n    contentInsetAdjustmentBehavior: 'never',\n};\n\nexport default Dialog;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}