{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"dimensions\", \"insets\", \"style\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { NavigationContext, NavigationRouteContext, CommonActions, useTheme, useLinkBuilder } from '@react-navigation/native';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport BottomTabItem from \"./BottomTabItem\";\nimport BottomTabBarHeightCallbackContext from \"../utils/BottomTabBarHeightCallbackContext\";\nimport useWindowDimensions from \"../utils/useWindowDimensions\";\nimport useIsKeyboardShown from \"../utils/useIsKeyboardShown\";\nvar DEFAULT_TABBAR_HEIGHT = 49;\nvar COMPACT_TABBAR_HEIGHT = 32;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar useNativeDriver = Platform.OS !== 'web';\nvar shouldUseHorizontalLabels = function shouldUseHorizontalLabels(_ref) {\n  var state = _ref.state,\n    layout = _ref.layout,\n    dimensions = _ref.dimensions,\n    _ref$adaptive = _ref.adaptive,\n    adaptive = _ref$adaptive === void 0 ? true : _ref$adaptive,\n    labelPosition = _ref.labelPosition,\n    tabStyle = _ref.tabStyle;\n  if (labelPosition) {\n    return labelPosition === 'beside-icon';\n  }\n  if (!adaptive) {\n    return false;\n  }\n  if (layout.width >= 768) {\n    var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n    var flattenedStyle = StyleSheet.flatten(tabStyle);\n    if (flattenedStyle) {\n      if (typeof flattenedStyle.width === 'number') {\n        maxTabItemWidth = flattenedStyle.width;\n      } else if (typeof flattenedStyle.maxWidth === 'number') {\n        maxTabItemWidth = flattenedStyle.maxWidth;\n      }\n    }\n    return state.routes.length * maxTabItemWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\nvar getPaddingBottom = function getPaddingBottom(insets) {\n  return Math.max(insets.bottom - Platform.select({\n    ios: 4,\n    default: 0\n  }), 0);\n};\nexport var getTabBarHeight = function getTabBarHeight(_ref2) {\n  var dimensions = _ref2.dimensions,\n    insets = _ref2.insets,\n    style = _ref2.style,\n    rest = _objectWithoutProperties(_ref2, _excluded);\n  var _StyleSheet$flatten;\n  var customHeight = (_StyleSheet$flatten = StyleSheet.flatten(style)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.height;\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n  var isLandscape = dimensions.width > dimensions.height;\n  var horizontalLabels = shouldUseHorizontalLabels(_objectSpread({\n    dimensions: dimensions\n  }, rest));\n  var paddingBottom = getPaddingBottom(insets);\n  if (Platform.OS === 'ios' && !Platform.isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\nexport default function BottomTabBar(_ref3) {\n  var state = _ref3.state,\n    navigation = _ref3.navigation,\n    descriptors = _ref3.descriptors,\n    activeBackgroundColor = _ref3.activeBackgroundColor,\n    activeTintColor = _ref3.activeTintColor,\n    adaptive = _ref3.adaptive,\n    allowFontScaling = _ref3.allowFontScaling,\n    inactiveBackgroundColor = _ref3.inactiveBackgroundColor,\n    inactiveTintColor = _ref3.inactiveTintColor,\n    _ref3$keyboardHidesTa = _ref3.keyboardHidesTabBar,\n    keyboardHidesTabBar = _ref3$keyboardHidesTa === void 0 ? false : _ref3$keyboardHidesTa,\n    labelPosition = _ref3.labelPosition,\n    labelStyle = _ref3.labelStyle,\n    iconStyle = _ref3.iconStyle,\n    safeAreaInsets = _ref3.safeAreaInsets,\n    showLabel = _ref3.showLabel,\n    style = _ref3.style,\n    tabStyle = _ref3.tabStyle;\n  var _safeAreaInsets$top, _safeAreaInsets$right, _safeAreaInsets$botto, _safeAreaInsets$left;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var buildLink = useLinkBuilder();\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var dimensions = useWindowDimensions();\n  var isKeyboardShown = useIsKeyboardShown();\n  var onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n  var shouldShowTabBar = focusedOptions.tabBarVisible !== false && !(keyboardHidesTabBar && isKeyboardShown);\n  var visibilityAnimationConfigRef = React.useRef(focusedOptions.tabBarVisibilityAnimationConfig);\n  React.useEffect(function () {\n    visibilityAnimationConfigRef.current = focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n  var _React$useState = React.useState(!shouldShowTabBar),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isTabBarHidden = _React$useState2[0],\n    setIsTabBarHidden = _React$useState2[1];\n  var _React$useState3 = React.useState(function () {\n      return new Animated.Value(shouldShowTabBar ? 1 : 0);\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    visible = _React$useState4[0];\n  React.useEffect(function () {\n    var visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n      var animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) === null || _visibilityAnimationC === void 0 ? void 0 : _visibilityAnimationC.animation) === 'spring' ? Animated.spring : Animated.timing;\n      animation(visible, _objectSpread({\n        toValue: 1,\n        useNativeDriver: useNativeDriver,\n        duration: 250\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) === null || _visibilityAnimationC2 === void 0 ? void 0 : _visibilityAnimationC2.config)).start(function (_ref4) {\n        var finished = _ref4.finished;\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n      setIsTabBarHidden(true);\n      var _animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC3 === void 0 ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? Animated.spring : Animated.timing;\n      _animation(visible, _objectSpread({\n        toValue: 0,\n        useNativeDriver: useNativeDriver,\n        duration: 200\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC4 === void 0 ? void 0 : _visibilityAnimationC4.config)).start();\n    }\n  }, [visible, shouldShowTabBar]);\n  var _React$useState5 = React.useState({\n      height: 0,\n      width: dimensions.width\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    layout = _React$useState6[0],\n    setLayout = _React$useState6[1];\n  var handleLayout = function handleLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n      height = _e$nativeEvent$layout.height,\n      width = _e$nativeEvent$layout.width;\n    onHeightChange === null || onHeightChange === void 0 ? void 0 : onHeightChange(height);\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n  var routes = state.routes;\n  var defaultInsets = useSafeArea();\n  var insets = {\n    top: (_safeAreaInsets$top = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top) !== null && _safeAreaInsets$top !== void 0 ? _safeAreaInsets$top : defaultInsets.top,\n    right: (_safeAreaInsets$right = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) !== null && _safeAreaInsets$right !== void 0 ? _safeAreaInsets$right : defaultInsets.right,\n    bottom: (_safeAreaInsets$botto = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) !== null && _safeAreaInsets$botto !== void 0 ? _safeAreaInsets$botto : defaultInsets.bottom,\n    left: (_safeAreaInsets$left = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) !== null && _safeAreaInsets$left !== void 0 ? _safeAreaInsets$left : defaultInsets.left\n  };\n  var paddingBottom = getPaddingBottom(insets);\n  var tabBarHeight = getTabBarHeight({\n    state: state,\n    insets: insets,\n    dimensions: dimensions,\n    layout: layout,\n    adaptive: adaptive,\n    labelPosition: labelPosition,\n    tabStyle: tabStyle,\n    style: style\n  });\n  var hasHorizontalLabels = shouldUseHorizontalLabels({\n    state: state,\n    dimensions: dimensions,\n    layout: layout,\n    adaptive: adaptive,\n    labelPosition: labelPosition,\n    tabStyle: tabStyle\n  });\n  return React.createElement(Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: tabBarHeight,\n      paddingBottom: paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, style],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    onLayout: handleLayout\n  }, React.createElement(View, {\n    style: styles.content\n  }, routes.map(function (route, index) {\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, CommonActions.navigate(route.name)), {}, {\n          target: state.key\n        }));\n      }\n    };\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' ? \"\".concat(label, \", tab, \").concat(index + 1, \" of \").concat(routes.length) : undefined;\n    return React.createElement(NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, React.createElement(NavigationRouteContext.Provider, {\n      value: route\n    }, React.createElement(BottomTabItem, {\n      route: route,\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: allowFontScaling,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      activeBackgroundColor: activeBackgroundColor,\n      inactiveBackgroundColor: inactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: options.tabBarIcon,\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: showLabel,\n      labelStyle: labelStyle,\n      iconStyle: iconStyle,\n      style: tabStyle\n    })));\n  })));\n}\nvar styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["React","View","Animated","StyleSheet","Platform","NavigationContext","NavigationRouteContext","CommonActions","useTheme","useLinkBuilder","useSafeArea","BottomTabItem","BottomTabBarHeightCallbackContext","useWindowDimensions","useIsKeyboardShown","DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","OS","shouldUseHorizontalLabels","_ref","state","layout","dimensions","_ref$adaptive","adaptive","labelPosition","tabStyle","width","maxTabItemWidth","flattenedStyle","flatten","maxWidth","routes","length","height","getPaddingBottom","insets","Math","max","bottom","select","ios","default","getTabBarHeight","_ref2","style","rest","_objectWithoutProperties","_excluded","_StyleSheet$flatten","customHeight","isLandscape","horizontalLabels","_objectSpread","paddingBottom","isPad","BottomTabBar","_ref3","navigation","descriptors","activeBackgroundColor","activeTintColor","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","_ref3$keyboardHidesTa","keyboardHidesTabBar","labelStyle","iconStyle","safeAreaInsets","showLabel","_safeAreaInsets$top","_safeAreaInsets$right","_safeAreaInsets$botto","_safeAreaInsets$left","_useTheme","colors","buildLink","focusedRoute","index","focusedDescriptor","key","focusedOptions","options","isKeyboardShown","onHeightChange","useContext","shouldShowTabBar","tabBarVisible","visibilityAnimationConfigRef","useRef","tabBarVisibilityAnimationConfig","useEffect","current","_React$useState","useState","_React$useState2","_slicedToArray","isTabBarHidden","setIsTabBarHidden","_React$useState3","Value","_React$useState4","visible","visibilityAnimationConfig","_visibilityAnimationC","_visibilityAnimationC2","animation","show","spring","timing","toValue","duration","config","start","_ref4","finished","_visibilityAnimationC3","_visibilityAnimationC4","hide","_React$useState5","_React$useState6","setLayout","handleLayout","e","_e$nativeEvent$layout","nativeEvent","defaultInsets","top","right","left","tabBarHeight","hasHorizontalLabels","createElement","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","pointerEvents","onLayout","content","map","route","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","concat","Provider","value","horizontal","to","params","testID","tabBarTestID","button","tabBarButton","icon","tabBarIcon","badge","tabBarBadge","badgeStyle","tabBarBadgeStyle","create","borderTopWidth","elevation","flex","flexDirection"],"sources":["/Users/duraanali/Pictures/Familyga App/frontend/node_modules/@react-navigation/bottom-tabs/lib/module/views/BottomTabBar.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Platform,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  TabNavigationState,\n  ParamListBase,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea, EdgeInsets } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport type { BottomTabBarProps, LabelPosition } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n  tabStyle: StyleProp<ViewStyle>;\n  labelPosition: LabelPosition | undefined;\n  adaptive: boolean | undefined;\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  layout,\n  dimensions,\n  adaptive = true,\n  labelPosition,\n  tabStyle,\n}: Options) => {\n  if (labelPosition) {\n    return labelPosition === 'beside-icon';\n  }\n\n  if (!adaptive) {\n    return false;\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n    const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n    if (flattenedStyle) {\n      if (typeof flattenedStyle.width === 'number') {\n        maxTabItemWidth = flattenedStyle.width;\n      } else if (typeof flattenedStyle.maxWidth === 'number') {\n        maxTabItemWidth = flattenedStyle.maxWidth;\n      }\n    }\n\n    return state.routes.length * maxTabItemWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({ dimensions, ...rest });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  iconStyle,\n  safeAreaInsets,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const dimensions = useWindowDimensions();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar =\n    focusedOptions.tabBarVisible !== false &&\n    !(keyboardHidesTabBar && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    focusedOptions.tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current =\n      focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    insets,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n    style,\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n  });\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={handleLayout}\n    >\n      <View style={styles.content}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  iconStyle={iconStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}