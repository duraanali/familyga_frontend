{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nexport default function useWindowDimensions() {\n  var _React$useState = React.useState(function () {\n      var _Dimensions$get = Dimensions.get('window'),\n        _Dimensions$get$heigh = _Dimensions$get.height,\n        height = _Dimensions$get$heigh === void 0 ? 0 : _Dimensions$get$heigh,\n        _Dimensions$get$width = _Dimensions$get.width,\n        width = _Dimensions$get$width === void 0 ? 0 : _Dimensions$get$width;\n      return {\n        height: height,\n        width: width\n      };\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    dimensions = _React$useState2[0],\n    setDimensions = _React$useState2[1];\n  React.useEffect(function () {\n    var onChange = function onChange(_ref) {\n      var window = _ref.window;\n      var width = window.width,\n        height = window.height;\n      setDimensions(function (d) {\n        if (width === d.width && height === d.height) {\n          return d;\n        }\n        return {\n          width: width,\n          height: height\n        };\n      });\n    };\n    onChange({\n      window: Dimensions.get('window')\n    });\n    Dimensions.addEventListener('change', onChange);\n    return function () {\n      return Dimensions.removeEventListener('change', onChange);\n    };\n  }, []);\n  return dimensions;\n}","map":{"version":3,"names":["React","Dimensions","useWindowDimensions","_React$useState","useState","_Dimensions$get","get","_Dimensions$get$heigh","height","_Dimensions$get$width","width","_React$useState2","_slicedToArray","dimensions","setDimensions","useEffect","onChange","_ref","window","d","addEventListener","removeEventListener"],"sources":["/Users/duraanali/Pictures/Familyga App/frontend/node_modules/@react-navigation/bottom-tabs/lib/module/utils/useWindowDimensions.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ScaledSize, Dimensions } from 'react-native';\n\n// This is similar to the new useWindowDimensions hook in react-native\n// However, we have a custom implementation to support older RN versions\nexport default function useWindowDimensions() {\n  const [dimensions, setDimensions] = React.useState(() => {\n    // `height` and `width` maybe undefined during SSR, so we initialize them\n    const { height = 0, width = 0 } = Dimensions.get('window');\n\n    return { height, width };\n  });\n\n  React.useEffect(() => {\n    const onChange = ({ window }: { window: ScaledSize }) => {\n      const { width, height } = window;\n\n      setDimensions((d) => {\n        if (width === d.width && height === d.height) {\n          return d;\n        }\n\n        return { width, height };\n      });\n    };\n\n    // We might have missed an update before the listener was added\n    // So make sure to update the dimensions\n    onChange({ window: Dimensions.get('window') });\n\n    Dimensions.addEventListener('change', onChange);\n\n    return () => Dimensions.removeEventListener('change', onChange);\n  }, []);\n\n  return dimensions;\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA,OAAAC,UAAA;AAKA,eAAe,SAASC,mBAATA,CAAA,EAA+B;EAC5C,IAAAC,eAAA,GAAoCH,KAAK,CAACI,QAAN,CAAe,YAAM;MAEvD,IAAAC,eAAA,GAAkCJ,UAAU,CAACK,GAAX,CAAe,QAAf,CAAlC;QAAAC,qBAAA,GAAAF,eAAA,CAAQG,MAAM;QAANA,MAAM,GAAAD,qBAAA,cAAG,CAAX,GAAAA,qBAAA;QAAAE,qBAAA,GAAAJ,eAAA,CAAcK,KAAK;QAALA,KAAK,GAAAD,qBAAA,cAAG,IAAAA,qBAAA;MAE5B,OAAO;QAAED,MAAF,EAAEA,MAAF;QAAUE,KAAA,EAAAA;MAAV,CAAP;IACD,CALmC,CAApC;IAAAC,gBAAA,GAAAC,cAAA,CAAAT,eAAA;IAAOU,UAAD,GAAAF,gBAAA;IAAaG,aAAb,GAAAH,gBAAA;EAONX,KAAK,CAACe,SAAN,CAAgB,YAAM;IACpB,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAA2C;MAAA,IAArCC,MAAA,GAAAD,IAAA,CAAAC,MAAA;MAClB,IAAQR,KAAF,GAAoBQ,MAA1B,CAAQR,KAAF;QAASF,MAAA,GAAWU,MAA1B,CAAeV,MAAA;MAEfM,aAAa,CAAE,UAAAK,CAAD,EAAO;QACnB,IAAIT,KAAK,KAAKS,CAAC,CAACT,KAAZ,IAAqBF,MAAM,KAAKW,CAAC,CAACX,MAAtC,EAA8C;UAC5C,OAAOW,CAAP;QACD;QAED,OAAO;UAAET,KAAF,EAAEA,KAAF;UAASF,MAAA,EAAAA;QAAT,CAAP;MACD,CANY,CAAb;IAOD,CAVD;IAcAQ,QAAQ,CAAC;MAAEE,MAAM,EAAEjB,UAAU,CAACK,GAAX,CAAe,QAAf;IAAV,CAAD,CAAR;IAEAL,UAAU,CAACmB,gBAAX,CAA4B,QAA5B,EAAsCJ,QAAtC;IAEA,OAAO;MAAA,OAAMf,UAAU,CAACoB,mBAAX,CAA+B,QAA/B,EAAyCL,QAAzC,CAAb;IAAA;EACD,CApBD,EAoBG,EApBH;EAsBA,OAAOH,UAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}