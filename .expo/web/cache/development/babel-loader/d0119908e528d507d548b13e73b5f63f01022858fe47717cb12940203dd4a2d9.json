{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar OS = Platform.OS;\nvar TouchableEffect = function TouchableEffect(props) {\n  if (OS === 'android') {\n    return _jsx(TouchableNativeFeedback, _objectSpread({}, props));\n  }\n  return _jsx(TouchableOpacity, _objectSpread({}, props));\n};\nexport default TouchableEffect;","map":{"version":3,"names":["React","Component","Platform","TouchableOpacity","TouchableNativeFeedback","jsx","_jsx","OS","TouchableEffect","props","_objectSpread"],"sources":["/Users/duraanali/Pictures/Familyga App/frontend/node_modules/react-native-simple-dialogs/src/TouchableEffect.js"],"sourcesContent":["/**\n* MIT License\n* \n* Copyright (c) 2017 Douglas Nassif Roma Junior\n* \n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n* \n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n* \n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE. \n*/\n\nimport React, { Component } from 'react'\nimport {\n    Platform,\n    TouchableOpacity,\n    TouchableNativeFeedback,\n} from 'react-native'\n\nconst { OS } = Platform;\n\nconst TouchableEffect = (props) => {\n    if (OS === 'android') {\n        return <TouchableNativeFeedback {...props} />;\n    }\n\n    return <TouchableOpacity {...props} />;\n}\n\nexport default TouchableEffect;\n"],"mappings":";;;AAwBA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,uBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAOxC,IAAQC,EAAE,GAAKL,QAAQ,CAAfK,EAAE;AAEV,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,KAAK,EAAK;EAC/B,IAAIF,EAAE,KAAK,SAAS,EAAE;IAClB,OAAOD,IAAA,CAACF,uBAAuB,EAAAM,aAAA,KAAKD,KAAK,CAAG,CAAC;EACjD;EAEA,OAAOH,IAAA,CAACH,gBAAgB,EAAAO,aAAA,KAAKD,KAAK,CAAG,CAAC;AAC1C,CAAC;AAED,eAAeD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}