{"ast":null,"code":"import React, { memo } from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ROUTES from \"../utils/routes\";\nimport HeaderTitle from \"../components/HeaderTittle\";\nimport ButtonHeader from \"../components/ButtonHeader\";\nimport HeaderBackGround from \"../components/HeaderBackGround\";\nimport MainPage from \"../screens/MainPage\";\nimport SvgMenu from \"../svgs/SvgMenu\";\nimport SvgNotification from \"../svgs/SvgNotification\";\nimport SvgCarer from \"../svgs/SvgCarer\";\nimport colors from \"../utils/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar MainPageStack = memo(function () {\n  return _jsx(Stack.Navigator, {\n    children: _jsx(Stack.Screen, {\n      name: ROUTES.MainPage,\n      component: MainPage,\n      options: function options(_ref) {\n        var navigation = _ref.navigation;\n        return {\n          headerTitleAlign: \"center\",\n          headerTitle: function headerTitle() {\n            return _jsx(HeaderTitle, {\n              children: _jsx(SvgCarer, {\n                color: colors.white\n              })\n            });\n          },\n          headerLeft: function headerLeft() {\n            return _jsx(ButtonHeader, {\n              onPress: function onPress() {\n                return navigation.openDrawer();\n              },\n              children: _jsx(SvgMenu, {})\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsx(ButtonHeader, {\n              children: _jsx(SvgNotification, {}),\n              onPress: function onPress() {\n                navigation.navigate(ROUTES.Notification);\n              }\n            });\n          },\n          headerBackground: function headerBackground() {\n            return _jsx(HeaderBackGround, {});\n          }\n        };\n      }\n    })\n  });\n});\nexport default MainPageStack;","map":{"version":3,"names":["React","memo","createStackNavigator","ROUTES","HeaderTitle","ButtonHeader","HeaderBackGround","MainPage","SvgMenu","SvgNotification","SvgCarer","colors","jsx","_jsx","Stack","MainPageStack","Navigator","children","Screen","name","component","options","_ref","navigation","headerTitleAlign","headerTitle","color","white","headerLeft","onPress","openDrawer","headerRight","navigate","Notification","headerBackground"],"sources":["/Users/duraanali/Pictures/Familyga App/frontend/src/navigation/MainPageStack.js"],"sourcesContent":["import React, { memo } from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ROUTES from \"@utils/routes\";\nimport HeaderTitle from \"@components/HeaderTittle\";\nimport ButtonHeader from \"@components/ButtonHeader\";\nimport HeaderBackGround from \"@components/HeaderBackGround\";\nimport MainPage from \"@screens/MainPage\";\nimport SvgMenu from \"@svgs/SvgMenu\";\nimport SvgNotification from \"@svgs/SvgNotification\";\nimport SvgCarer from \"@svgs/SvgCarer\";\nimport colors from \"@utils/colors\";\n\nconst Stack = createStackNavigator();\n\nconst MainPageStack = memo(() => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name={ROUTES.MainPage}\n        component={MainPage}\n        options={({ navigation }) => ({\n          headerTitleAlign: \"center\",\n          headerTitle: () => (\n            <HeaderTitle children={<SvgCarer color={colors.white} />} />\n          ),\n          headerLeft: () => (\n            <ButtonHeader\n              onPress={() => navigation.openDrawer()}\n              children={<SvgMenu />}\n            />\n          ),\n          headerRight: () => (\n            <ButtonHeader\n              children={<SvgNotification />}\n              onPress={() => {\n                navigation.navigate(ROUTES.Notification);\n              }}\n            />\n          ),\n          headerBackground: () => <HeaderBackGround />,\n        })}\n      />\n    </Stack.Navigator>\n  );\n});\n\nexport default MainPageStack;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,IAAI,QAAQ,OAAO;AACnC,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,MAAM;AACb,OAAOC,WAAW;AAClB,OAAOC,YAAY;AACnB,OAAOC,gBAAgB;AACvB,OAAOC,QAAQ;AACf,OAAOC,OAAO;AACd,OAAOC,eAAe;AACtB,OAAOC,QAAQ;AACf,OAAOC,MAAM;AAAsB,SAAAC,GAAA,IAAAC,IAAA;AAEnC,IAAMC,KAAK,GAAGZ,oBAAoB,CAAC,CAAC;AAEpC,IAAMa,aAAa,GAAGd,IAAI,CAAC,YAAM;EAC/B,OACEY,IAAA,CAACC,KAAK,CAACE,SAAS;IAAAC,QAAA,EACdJ,IAAA,CAACC,KAAK,CAACI,MAAM;MACXC,IAAI,EAAEhB,MAAM,CAACI,QAAS;MACtBa,SAAS,EAAEb,QAAS;MACpBc,OAAO,EAAE,SAAAA,QAAAC,IAAA;QAAA,IAAGC,UAAU,GAAAD,IAAA,CAAVC,UAAU;QAAA,OAAQ;UAC5BC,gBAAgB,EAAE,QAAQ;UAC1BC,WAAW,EAAE,SAAAA,YAAA;YAAA,OACXZ,IAAA,CAACT,WAAW;cAACa,QAAQ,EAAEJ,IAAA,CAACH,QAAQ;gBAACgB,KAAK,EAAEf,MAAM,CAACgB;cAAM,CAAE;YAAE,CAAE,CAAC;UAAA,CAC7D;UACDC,UAAU,EAAE,SAAAA,WAAA;YAAA,OACVf,IAAA,CAACR,YAAY;cACXwB,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAMN,UAAU,CAACO,UAAU,CAAC,CAAC;cAAA,CAAC;cACvCb,QAAQ,EAAEJ,IAAA,CAACL,OAAO,IAAE;YAAE,CACvB,CAAC;UAAA,CACH;UACDuB,WAAW,EAAE,SAAAA,YAAA;YAAA,OACXlB,IAAA,CAACR,YAAY;cACXY,QAAQ,EAAEJ,IAAA,CAACJ,eAAe,IAAE,CAAE;cAC9BoB,OAAO,EAAE,SAAAA,QAAA,EAAM;gBACbN,UAAU,CAACS,QAAQ,CAAC7B,MAAM,CAAC8B,YAAY,CAAC;cAC1C;YAAE,CACH,CAAC;UAAA,CACH;UACDC,gBAAgB,EAAE,SAAAA,iBAAA;YAAA,OAAMrB,IAAA,CAACP,gBAAgB,IAAE,CAAC;UAAA;QAC9C,CAAC;MAAA;IAAE,CACJ;EAAC,CACa,CAAC;AAEtB,CAAC,CAAC;AAEF,eAAeS,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}