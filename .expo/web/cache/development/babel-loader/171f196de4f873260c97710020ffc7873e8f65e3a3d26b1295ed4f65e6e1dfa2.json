{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nvar useToggle = function useToggle() {\n  var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var _React$useState = React.useState(initValue),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    value = _React$useState2[0],\n    setValue = _React$useState2[1];\n  var toggle = React.useCallback(function () {\n    setValue(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return [value, toggle];\n};\nexport default useToggle;","map":{"version":3,"names":["React","useToggle","initValue","arguments","length","undefined","_React$useState","useState","_React$useState2","_slicedToArray","value","setValue","toggle","useCallback","prev"],"sources":["/Users/duraanali/Pictures/Familyga App/frontend/src/hooks/useToggle.ts"],"sourcesContent":["import React from \"react\";\n\nconst useToggle = (initValue = false): [value: boolean, toggle: () => void] => {\n  const [value, setValue] = React.useState<boolean>(initValue);\n  const toggle = React.useCallback(() => {\n    setValue((prev: boolean): boolean => !prev);\n  }, []);\n  return [value, toggle];\n};\n\nexport default useToggle;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAgE;EAAA,IAA5DC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAClC,IAAAG,eAAA,GAA0BN,KAAK,CAACO,QAAQ,CAAUL,SAAS,CAAC;IAAAM,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAArDI,KAAK,GAAAF,gBAAA;IAAEG,QAAQ,GAAAH,gBAAA;EACtB,IAAMI,MAAM,GAAGZ,KAAK,CAACa,WAAW,CAAC,YAAM;IACrCF,QAAQ,CAAC,UAACG,IAAa;MAAA,OAAc,CAACA,IAAI;IAAA,EAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAACJ,KAAK,EAAEE,MAAM,CAAC;AACxB,CAAC;AAED,eAAeX,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}