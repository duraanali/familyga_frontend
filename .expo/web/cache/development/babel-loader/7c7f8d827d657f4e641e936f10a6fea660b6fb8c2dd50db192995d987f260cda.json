{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"contentContainerStyle\", \"style\", \"children\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport DrawerPositionContext from \"../utils/DrawerPositionContext\";\nexport default function DrawerContentScrollView(_ref) {\n  var contentContainerStyle = _ref.contentContainerStyle,\n    style = _ref.style,\n    children = _ref.children,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var drawerPosition = React.useContext(DrawerPositionContext);\n  var insets = useSafeArea();\n  return React.createElement(ScrollView, _extends({}, rest, {\n    contentContainerStyle: [{\n      paddingTop: insets.top + 4,\n      paddingLeft: drawerPosition === 'left' ? insets.left : 0,\n      paddingRight: drawerPosition === 'right' ? insets.right : 0\n    }, contentContainerStyle],\n    style: [styles.container, style]\n  }), children);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","ScrollView","StyleSheet","useSafeArea","DrawerPositionContext","DrawerContentScrollView","_ref","contentContainerStyle","style","children","rest","_objectWithoutProperties","_excluded","drawerPosition","useContext","insets","createElement","_extends","paddingTop","top","paddingLeft","left","paddingRight","right","styles","container","create","flex"],"sources":["/Users/duraanali/Pictures/Familyga App/frontend/node_modules/@react-navigation/drawer/lib/module/views/DrawerContentScrollView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps } from 'react-native';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport DrawerPositionContext from '../utils/DrawerPositionContext';\n\ntype Props = ScrollViewProps & {\n  children: React.ReactNode;\n};\n\nexport default function DrawerContentScrollView({\n  contentContainerStyle,\n  style,\n  children,\n  ...rest\n}: Props) {\n  const drawerPosition = React.useContext(DrawerPositionContext);\n  const insets = useSafeArea();\n\n  return (\n    <ScrollView\n      {...rest}\n      contentContainerStyle={[\n        {\n          paddingTop: insets.top + 4,\n          paddingLeft: drawerPosition === 'left' ? insets.left : 0,\n          paddingRight: drawerPosition === 'right' ? insets.right : 0,\n        },\n        contentContainerStyle,\n      ]}\n      style={[styles.container, style]}\n    >\n      {children}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAEA,SAASC,WAAT,QAA4B,gCAA5B;AACA,OAAOC,qBAAP;AAMA,eAAe,SAASC,uBAATA,CAAAC,IAAA,EAKL;EAAA,IAJRC,qBAD8C,GAAAD,IAAA,CAC9CC,qBAD8C;IAE9CC,KAF8C,GAAAF,IAAA,CAE9CE,KAF8C;IAG9CC,QAH8C,GAAAH,IAAA,CAG9CG,QAH8C;IAI3CC,IAAA,GAAAC,wBAAA,CAAAL,IAAA,EAAAM,SAAA;EAEH,IAAMC,cAAc,GAAGb,KAAK,CAACc,UAAN,CAAiBV,qBAAjB,CAAvB;EACA,IAAMW,MAAM,GAAGZ,WAAW,EAA1B;EAEA,OACEH,KAAA,CAAAgB,aAAA,CAACf,UAAD,EAAAgB,QAAA,KACMP,IADN;IAEEH,qBAAqB,EAAE,CACrB;MACEW,UAAU,EAAEH,MAAM,CAACI,GAAP,GAAa,CAD3B;MAEEC,WAAW,EAAEP,cAAc,KAAK,MAAnB,GAA4BE,MAAM,CAACM,IAAnC,GAA0C,CAFzD;MAGEC,YAAY,EAAET,cAAc,KAAK,OAAnB,GAA6BE,MAAM,CAACQ,KAApC,GAA4C;IAH5D,CADqB,EAMrBhB,qBANqB,CAFzB;IAUEC,KAAK,EAAE,CAACgB,MAAM,CAACC,SAAR,EAAmBjB,KAAnB;EAVT,IAYGC,QAZH,CADF;AAgBD;AAED,IAAMe,MAAM,GAAGtB,UAAU,CAACwB,MAAX,CAAkB;EAC/BD,SAAS,EAAE;IACTE,IAAI,EAAE;EADG;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}