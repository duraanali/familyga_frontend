{"ast":null,"code":"import React, { memo } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nvar Stack = createStackNavigator();\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ROUTES from \"../utils/routes\";\nimport HeaderTitle from \"../components/HeaderTittle\";\nimport ButtonHeader from \"../components/ButtonHeader\";\nimport HeaderBackGround from \"../components/HeaderBackGround\";\nimport SignIn from \"../screens/SignIn\";\nimport SignUp from \"../screens/SignUp\";\nimport ForgotPassword from \"../screens/ForgotPassword\";\nimport kids from \"../screens/Kids\";\nimport KidProfile from \"../screens/Kids/KidProfile\";\nimport { useSelector } from \"react-redux\";\nimport DashBoard from \"../screens/DashBoard\";\nimport DrawerNavigator from \"./DrawerNavigator\";\nimport PersonalInfo from \"../screens/Kids/KidProfile/PersonalInfo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stacks = memo(function () {\n  var isLoggedIn = useSelector(function (state) {\n    return state.parent.isLoggedIn;\n  });\n  return _jsx(NavigationContainer, {\n    children: isLoggedIn ? _jsxs(Stack.Navigator, {\n      headerMode: \"screen\",\n      initialRouteName: ROUTES.DrawerNavigator,\n      children: [_jsx(Stack.Screen, {\n        name: ROUTES.DrawerNavigator,\n        component: DrawerNavigator,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: ROUTES.KidProfile,\n        component: KidProfile,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: ROUTES.KidInformation,\n        component: PersonalInfo,\n        options: {\n          headerTitleAlign: \"center\",\n          headerTitle: function headerTitle() {\n            return _jsx(HeaderTitle, {\n              title: \"Kid Information\"\n            });\n          },\n          headerLeft: function headerLeft() {\n            return _jsx(ButtonHeader, {});\n          },\n          headerBackground: function headerBackground() {\n            return _jsx(HeaderBackGround, {});\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: ROUTES.Kids,\n        component: kids,\n        options: {\n          headerTitleAlign: \"center\",\n          headerTitle: function headerTitle() {\n            return _jsx(HeaderTitle, {\n              title: \"Your Kids\"\n            });\n          },\n          headerLeft: function headerLeft() {\n            return _jsx(ButtonHeader, {});\n          },\n          headerBackground: function headerBackground() {\n            return _jsx(HeaderBackGround, {});\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: ROUTES.DashBoard,\n        component: DashBoard,\n        options: {\n          headerTitleAlign: \"center\",\n          headerTitle: function headerTitle() {\n            return _jsx(HeaderTitle, {\n              title: \"DashBoard\"\n            });\n          },\n          headerLeft: function headerLeft() {\n            return _jsx(ButtonHeader, {});\n          },\n          headerBackground: function headerBackground() {\n            return _jsx(HeaderBackGround, {});\n          }\n        }\n      })]\n    }) : _jsxs(Stack.Navigator, {\n      headerMode: \"screen\",\n      initialRouteName: ROUTES.SignIn,\n      children: [_jsx(Stack.Screen, {\n        name: ROUTES.SignIn,\n        component: SignIn,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: ROUTES.SignUp,\n        component: SignUp,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: ROUTES.ForgotPassword,\n        component: ForgotPassword,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n});\nexport default Stacks;","map":{"version":3,"names":["React","memo","View","NavigationContainer","Stack","createStackNavigator","ROUTES","HeaderTitle","ButtonHeader","HeaderBackGround","SignIn","SignUp","ForgotPassword","kids","KidProfile","useSelector","DashBoard","DrawerNavigator","PersonalInfo","jsx","_jsx","jsxs","_jsxs","Stacks","isLoggedIn","state","parent","children","Navigator","headerMode","initialRouteName","Screen","name","component","options","headerShown","KidInformation","headerTitleAlign","headerTitle","title","headerLeft","headerBackground","Kids"],"sources":["/Users/duraanali/Pictures/Familyga App/frontend/src/navigation/Stacks.js"],"sourcesContent":["import React, { memo } from \"react\";\nimport { View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nconst Stack = createStackNavigator();\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ROUTES from \"@utils/routes\";\nimport HeaderTitle from \"@components/HeaderTittle\";\nimport ButtonHeader from \"@components/ButtonHeader\";\nimport HeaderBackGround from \"@components/HeaderBackGround\";\nimport SignIn from \"@screens/SignIn\";\nimport SignUp from \"@screens/SignUp\";\nimport ForgotPassword from \"@screens/ForgotPassword\";\nimport kids from \"@screens/Kids\";\nimport KidProfile from \"@screens/Kids/KidProfile\";\nimport { useSelector } from \"react-redux\";\n\nimport DashBoard from \"@screens/DashBoard\";\n\nimport DrawerNavigator from \"@navigation/DrawerNavigator\";\nimport PersonalInfo from \"@screens/Kids/KidProfile/PersonalInfo\";\n\nconst Stacks = memo(() => {\n  const isLoggedIn = useSelector((state) => state.parent.isLoggedIn); // Accessing isLoggedIn state\n\n  return (\n    <NavigationContainer>\n      {isLoggedIn ? (\n        <Stack.Navigator\n          headerMode={\"screen\"}\n          initialRouteName={ROUTES.DrawerNavigator}\n        >\n          <Stack.Screen\n            name={ROUTES.DrawerNavigator}\n            component={DrawerNavigator}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name={ROUTES.KidProfile}\n            component={KidProfile}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name={ROUTES.KidInformation}\n            component={PersonalInfo}\n            options={{\n              headerTitleAlign: \"center\",\n              headerTitle: () => <HeaderTitle title={\"Kid Information\"} />,\n              headerLeft: () => <ButtonHeader />,\n              // headerRight: () => (\n              //   <ButtonHeader children={<SvgMyHeart />} onPress={() => {}} />\n              // ),\n              headerBackground: () => <HeaderBackGround />,\n            }}\n          />\n          <Stack.Screen\n            name={ROUTES.Kids}\n            component={kids}\n            options={{\n              headerTitleAlign: \"center\",\n              headerTitle: () => <HeaderTitle title={\"Your Kids\"} />,\n              headerLeft: () => <ButtonHeader />,\n              headerBackground: () => <HeaderBackGround />,\n            }}\n          />\n\n          <Stack.Screen\n            name={ROUTES.DashBoard}\n            component={DashBoard}\n            options={{\n              headerTitleAlign: \"center\",\n              headerTitle: () => <HeaderTitle title={\"DashBoard\"} />,\n              headerLeft: () => <ButtonHeader />,\n              headerBackground: () => <HeaderBackGround />,\n            }}\n          />\n        </Stack.Navigator>\n      ) : (\n        <Stack.Navigator headerMode={\"screen\"} initialRouteName={ROUTES.SignIn}>\n          <Stack.Screen\n            name={ROUTES.SignIn}\n            component={SignIn}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name={ROUTES.SignUp}\n            component={SignUp}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name={ROUTES.ForgotPassword}\n            component={ForgotPassword}\n            options={{ headerShown: false }}\n          />\n        </Stack.Navigator>\n      )}\n    </NavigationContainer>\n  );\n});\n\nexport default Stacks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}