{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ReanimatedEventEmitter from \"./ReanimatedEventEmitter\";\nimport AnimatedEvent from \"./reanimated1/core/AnimatedEvent\";\nimport AnimatedNode from \"./reanimated1/core/AnimatedNode\";\nimport AnimatedValue from \"./reanimated1/core/AnimatedValue\";\nimport { createOrReusePropsNode } from \"./reanimated1/core/AnimatedProps\";\nimport WorkletEventHandler from \"./reanimated2/WorkletEventHandler\";\nimport setAndForwardRef from \"./setAndForwardRef\";\nimport \"./reanimated2/layoutReanimation/LayoutAnimationRepository\";\nimport invariant from 'invariant';\nimport { adaptViewConfig } from \"./ConfigHelper\";\nimport { RNRenderer } from \"./reanimated2/platform-specific/RNRenderer\";\nimport { makeMutable, runOnUI, enableLayoutAnimations } from \"./reanimated2/core\";\nimport { DefaultEntering, DefaultExiting, DefaultLayout } from \"./reanimated2/layoutReanimation/defaultAnimations/Default\";\nimport { isJest, isChromeDebugger, shouldBeUseWeb } from \"./reanimated2/PlatformChecker\";\nimport { initialUpdaterRun } from \"./reanimated2/animation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar NODE_MAPPING = new Map();\nfunction listener(data) {\n  var component = NODE_MAPPING.get(data.viewTag);\n  component && component._updateFromNative(data.props);\n}\nfunction dummyListener() {}\nfunction hasAnimatedNodes(value) {\n  if (value instanceof AnimatedNode) {\n    return true;\n  }\n  if (Array.isArray(value)) {\n    return value.some(function (item) {\n      return hasAnimatedNodes(item);\n    });\n  }\n  if (value && typeof value === 'object') {\n    return Object.keys(value).some(function (key) {\n      return hasAnimatedNodes(value[key]);\n    });\n  }\n  return false;\n}\nfunction flattenArray(array) {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  var resultArr = [];\n  var _flattenArray = function _flattenArray(arr) {\n    arr.forEach(function (item) {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style === null || style === void 0 ? void 0 : style.viewDescriptors;\n  });\n}\nfunction isSameAnimatedStyle(style1, style2) {\n  return (style1 === null || style1 === void 0 ? void 0 : style1.viewsRef) === (style2 === null || style2 === void 0 ? void 0 : style2.viewsRef);\n}\nvar isSameAnimatedProps = isSameAnimatedStyle;\nvar has = function has(key, x) {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n  return false;\n};\nexport default function createAnimatedComponent(Component, options) {\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, '`createAnimatedComponent` does not support stateless functional components; ' + 'use a class component instead.');\n  var AnimatedComponent = function (_React$Component) {\n    _inherits(AnimatedComponent, _React$Component);\n    var _super = _createSuper(AnimatedComponent);\n    function AnimatedComponent(props) {\n      var _this;\n      _classCallCheck(this, AnimatedComponent);\n      _this = _super.call(this, props);\n      _this._invokeAnimatedPropsCallbackOnMount = false;\n      _this._styles = null;\n      _this._viewTag = -1;\n      _this._isFirstRender = true;\n      _this.animatedStyle = {\n        value: {}\n      };\n      _this.initialStyle = {};\n      _this._component = null;\n      _this._animatedPropsCallback = function () {\n        if (_this._component == null) {\n          _this._invokeAnimatedPropsCallbackOnMount = true;\n        } else if (typeof _this._component.setNativeProps !== 'function') {\n          _this.forceUpdate();\n        } else {\n          _this._component.setNativeProps(_this._propsAnimated.__getValue());\n        }\n      };\n      _this._setComponentRef = setAndForwardRef({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          var tag = findNodeHandle(ref);\n          if (!shouldBeUseWeb() && (_this.props.layout || _this.props.entering || _this.props.exiting) && tag != null) {\n            enableLayoutAnimations(true, false);\n            var layout = _this.props.layout ? _this.props.layout : DefaultLayout;\n            var entering = _this.props.entering ? _this.props.entering : DefaultEntering;\n            var exiting = _this.props.exiting ? _this.props.exiting : DefaultExiting;\n            if (has('build', layout)) {\n              layout = layout.build();\n            }\n            if (has('build', entering)) {\n              entering = entering.build();\n            }\n            if (has('build', exiting)) {\n              exiting = exiting.build();\n            }\n            var config = {\n              layout: layout,\n              entering: entering,\n              exiting: exiting,\n              sv: _this.sv\n            };\n            runOnUI(function () {\n              var _f = function _f() {\n                global.LayoutAnimationRepository.registerConfig(tag, config);\n              };\n              _f._closure = {\n                tag: tag,\n                config: config\n              };\n              _f.asString = \"function _f(){const{tag,config}=jsThis._closure;{global.LayoutAnimationRepository.registerConfig(tag,config);}}\";\n              _f.__workletHash = 5455589887771;\n              _f.__location = \"/Users/duraanali/Pictures/Familyga App/frontend/node_modules/react-native-reanimated/lib/createAnimatedComponent.js (148:32)\";\n              return _f;\n            }())();\n          }\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n        }\n      });\n      _this._attachProps(_this.props);\n      if (isJest()) {\n        _this.animatedStyle = {\n          value: {}\n        };\n      }\n      _this.sv = makeMutable({});\n      return _this;\n    }\n    _createClass(AnimatedComponent, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._detachPropUpdater();\n        this._propsAnimated && this._propsAnimated.__detach();\n        this._detachNativeEvents();\n        this._detachStyles();\n        this.sv = null;\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (this._invokeAnimatedPropsCallbackOnMount) {\n          this._invokeAnimatedPropsCallbackOnMount = false;\n          this._animatedPropsCallback();\n        }\n        this._propsAnimated && this._propsAnimated.setNativeView(this._component);\n        this._attachNativeEvents();\n        this._attachPropUpdater();\n        this._attachAnimatedStyles();\n      }\n    }, {\n      key: \"_getEventViewRef\",\n      value: function _getEventViewRef() {\n        var _a;\n        return ((_a = this._component) === null || _a === void 0 ? void 0 : _a.getScrollableNode) ? this._component.getScrollableNode() : this._component;\n      }\n    }, {\n      key: \"_attachNativeEvents\",\n      value: function _attachNativeEvents() {\n        var node = this._getEventViewRef();\n        var viewTag = findNodeHandle((options === null || options === void 0 ? void 0 : options.setNativeProps) ? this : node);\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (prop instanceof AnimatedEvent) {\n            prop.attachEvent(node, key);\n          } else if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            prop.current.registerForEvents(viewTag, key);\n          }\n        }\n      }\n    }, {\n      key: \"_detachNativeEvents\",\n      value: function _detachNativeEvents() {\n        var node = this._getEventViewRef();\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (prop instanceof AnimatedEvent) {\n            prop.detachEvent(node, key);\n          } else if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        var _a;\n        if (Platform.OS === 'web' && this._styles !== null) {\n          for (var style of this._styles) {\n            if (style === null || style === void 0 ? void 0 : style.viewsRef) {\n              style.viewsRef.remove(this);\n            }\n          }\n        } else if (this._viewTag !== -1 && this._styles !== null) {\n          for (var _style of this._styles) {\n            _style.viewDescriptors.remove(this._viewTag);\n          }\n          if ((_a = this.props.animatedProps) === null || _a === void 0 ? void 0 : _a.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n          }\n        }\n      }\n    }, {\n      key: \"_reattachNativeEvents\",\n      value: function _reattachNativeEvents(prevProps) {\n        var node = this._getEventViewRef();\n        var attached = new Set();\n        var nextEvts = new Set();\n        var viewTag;\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (prop instanceof AnimatedEvent) {\n            nextEvts.add(prop.__nodeID);\n          } else if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            if (viewTag === undefined) {\n              viewTag = prop.current.viewTag;\n            }\n          }\n        }\n        for (var _key in prevProps) {\n          var _prop = this.props[_key];\n          if (_prop instanceof AnimatedEvent) {\n            if (!nextEvts.has(_prop.__nodeID)) {\n              _prop.detachEvent(node, _key);\n            } else {\n              attached.add(_prop.__nodeID);\n            }\n          } else if (has('current', _prop) && _prop.current instanceof WorkletEventHandler && _prop.current.reattachNeeded) {\n            _prop.current.unregisterFromEvents();\n          }\n        }\n        for (var _key2 in this.props) {\n          var _prop2 = this.props[_key2];\n          if (_prop2 instanceof AnimatedEvent && !attached.has(_prop2.__nodeID)) {\n            _prop2.attachEvent(node, _key2);\n          } else if (has('current', _prop2) && _prop2.current instanceof WorkletEventHandler && _prop2.current.reattachNeeded) {\n            _prop2.current.registerForEvents(viewTag, _key2);\n            _prop2.current.reattachNeeded = false;\n          }\n        }\n      }\n    }, {\n      key: \"_attachProps\",\n      value: function _attachProps(nextProps) {\n        var oldPropsAnimated = this._propsAnimated;\n        this._propsAnimated = createOrReusePropsNode(nextProps, this._animatedPropsCallback, oldPropsAnimated);\n        if (oldPropsAnimated !== this._propsAnimated) {\n          oldPropsAnimated && oldPropsAnimated.__detach();\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        var _a, _b;\n        if (options === null || options === void 0 ? void 0 : options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          (_b = (_a = this._component) === null || _a === void 0 ? void 0 : _a.setNativeProps) === null || _b === void 0 ? void 0 : _b.call(_a, props);\n        }\n      }\n    }, {\n      key: \"_attachPropUpdater\",\n      value: function _attachPropUpdater() {\n        var viewTag = findNodeHandle(this);\n        NODE_MAPPING.set(viewTag, this);\n        if (NODE_MAPPING.size === 1) {\n          ReanimatedEventEmitter.addListener('onReanimatedPropsChange', listener);\n        }\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this2 = this;\n        var _a, _b, _c;\n        var styles = this.props.style ? onlyAnimatedStyles(flattenArray(this.props.style)) : [];\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = this.props.animatedProps;\n        var viewTag;\n        var viewName;\n        if (Platform.OS === 'web') {\n          viewTag = findNodeHandle(this);\n          viewName = null;\n        } else {\n          var hostInstance = RNRenderer.findHostInstance_DEPRECATED(this);\n          if (!hostInstance) {\n            throw new Error('Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n          viewTag = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance._nativeTag;\n          viewName = (_a = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig) === null || _a === void 0 ? void 0 : _a.uiViewClassName;\n          var hasReanimated2Props = ((_b = this.props.animatedProps) === null || _b === void 0 ? void 0 : _b.viewDescriptors) || styles.length;\n          if (hasReanimated2Props && (hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig)) {\n            adaptViewConfig(hostInstance.viewConfig);\n          }\n        }\n        this._viewTag = viewTag;\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && isSameAnimatedStyle(styles[0], prevStyles[0]);\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return isSameAnimatedStyle(style, prevStyle);\n              });\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName\n          });\n          if (isJest()) {\n            _this2.animatedStyle.value = Object.assign(Object.assign({}, _this2.animatedStyle.value), style.initial.value);\n            style.animatedStyle.current = _this2.animatedStyle;\n          }\n        });\n        if (prevAnimatedProps && !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n        if ((_c = this.props.animatedProps) === null || _c === void 0 ? void 0 : _c.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName\n          });\n        }\n      }\n    }, {\n      key: \"_detachPropUpdater\",\n      value: function _detachPropUpdater() {\n        var viewTag = findNodeHandle(this);\n        NODE_MAPPING.delete(viewTag);\n        if (NODE_MAPPING.size === 0) {\n          ReanimatedEventEmitter.removeAllListeners('onReanimatedPropsChange');\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        this._attachProps(this.props);\n        this._reattachNativeEvents(prevProps);\n        this._propsAnimated && this._propsAnimated.setNativeView(this._component);\n        this._attachAnimatedStyles();\n      }\n    }, {\n      key: \"_filterNonAnimatedStyle\",\n      value: function _filterNonAnimatedStyle(inputStyle) {\n        var style = {};\n        for (var key in inputStyle) {\n          var value = inputStyle[key];\n          if (!hasAnimatedNodes(value)) {\n            style[key] = value;\n          } else if (value instanceof AnimatedValue) {\n            style[key] = value._startingValue;\n          }\n        }\n        return style;\n      }\n    }, {\n      key: \"_filterNonAnimatedProps\",\n      value: function _filterNonAnimatedProps(inputProps) {\n        var _this3 = this;\n        var props = {};\n        var _loop2 = function _loop2() {\n          var value = inputProps[key];\n          if (key === 'style') {\n            var styleProp = inputProps.style;\n            var styles = flattenArray(styleProp !== null && styleProp !== void 0 ? styleProp : []);\n            var processedStyle = styles.map(function (style) {\n              if (style && style.viewDescriptors) {\n                style.viewsRef.add(_this3);\n                if (_this3._isFirstRender) {\n                  _this3.initialStyle = Object.assign(Object.assign({}, style.initial.value), initialUpdaterRun(style.initial.updater));\n                }\n                return _this3.initialStyle;\n              } else {\n                return style;\n              }\n            });\n            props[key] = _this3._filterNonAnimatedStyle(StyleSheet.flatten(processedStyle));\n          } else if (key === 'animatedProps') {\n            var animatedProp = inputProps.animatedProps;\n            if (animatedProp.initial !== undefined) {\n              Object.keys(animatedProp.initial.value).forEach(function (key) {\n                var _a, _b;\n                props[key] = (_a = animatedProp.initial) === null || _a === void 0 ? void 0 : _a.value[key];\n                (_b = animatedProp.viewsRef) === null || _b === void 0 ? void 0 : _b.add(_this3);\n              });\n            }\n          } else if (value instanceof AnimatedEvent) {\n            props[key] = dummyListener;\n          } else if (has('current', value) && value.current instanceof WorkletEventHandler) {\n            if (value.current.eventNames.length > 0) {\n              value.current.eventNames.forEach(function (eventName) {\n                props[eventName] = has('listeners', value.current) ? value.current.listeners[eventName] : dummyListener;\n              });\n            } else {\n              props[key] = dummyListener;\n            }\n          } else if (!(value instanceof AnimatedNode)) {\n            if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n              props[key] = value;\n            }\n          } else if (value instanceof AnimatedValue) {\n            props[key] = value._startingValue;\n          }\n        };\n        for (var key in inputProps) {\n          _loop2();\n        }\n        return props;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this._filterNonAnimatedProps(this.props);\n        if (isJest()) {\n          props.animatedStyle = this.animatedStyle;\n        }\n        if (this._isFirstRender) {\n          this._isFirstRender = false;\n        }\n        var platformProps = Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        return _jsx(Component, _objectSpread(_objectSpread({}, props), {}, {\n          ref: this._setComponentRef\n        }, platformProps));\n      }\n    }]);\n    return AnimatedComponent;\n  }(React.Component);\n  AnimatedComponent.displayName = \"AnimatedComponent(\" + (Component.displayName || Component.name || 'Component') + \")\";\n  return React.forwardRef(function (props, ref) {\n    return _jsx(AnimatedComponent, _objectSpread(_objectSpread({}, props), ref === null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}","map":{"version":3,"names":["React","findNodeHandle","Platform","StyleSheet","ReanimatedEventEmitter","AnimatedEvent","AnimatedNode","AnimatedValue","createOrReusePropsNode","WorkletEventHandler","setAndForwardRef","invariant","adaptViewConfig","RNRenderer","makeMutable","runOnUI","enableLayoutAnimations","DefaultEntering","DefaultExiting","DefaultLayout","isJest","isChromeDebugger","shouldBeUseWeb","initialUpdaterRun","jsx","_jsx","NODE_MAPPING","Map","listener","data","component","get","viewTag","_updateFromNative","props","dummyListener","hasAnimatedNodes","value","Array","isArray","some","item","Object","keys","key","flattenArray","array","resultArr","_flattenArray","arr","forEach","push","onlyAnimatedStyles","styles","filter","style","viewDescriptors","isSameAnimatedStyle","style1","style2","viewsRef","isSameAnimatedProps","has","x","undefined","createAnimatedComponent","Component","options","prototype","isReactComponent","AnimatedComponent","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","_invokeAnimatedPropsCallbackOnMount","_styles","_viewTag","_isFirstRender","animatedStyle","initialStyle","_component","_animatedPropsCallback","setNativeProps","forceUpdate","_propsAnimated","__getValue","_setComponentRef","getForwardedRef","forwardedRef","setLocalRef","ref","tag","layout","entering","exiting","build","config","sv","_f","global","LayoutAnimationRepository","registerConfig","_closure","asString","__workletHash","__location","_attachProps","_createClass","componentWillUnmount","_detachPropUpdater","__detach","_detachNativeEvents","_detachStyles","componentDidMount","setNativeView","_attachNativeEvents","_attachPropUpdater","_attachAnimatedStyles","_getEventViewRef","_a","getScrollableNode","node","prop","attachEvent","current","registerForEvents","detachEvent","unregisterFromEvents","OS","remove","animatedProps","_reattachNativeEvents","prevProps","attached","Set","nextEvts","add","__nodeID","reattachNeeded","nextProps","oldPropsAnimated","_b","set","size","addListener","_this2","_c","prevStyles","prevAnimatedProps","_animatedProps","viewName","hostInstance","findHostInstance_DEPRECATED","Error","_nativeTag","viewConfig","uiViewClassName","hasReanimated2Props","length","hasOneSameStyle","_loop","prevStyle","isPresent","name","assign","initial","delete","removeAllListeners","componentDidUpdate","_filterNonAnimatedStyle","inputStyle","_startingValue","_filterNonAnimatedProps","inputProps","_this3","_loop2","styleProp","processedStyle","map","updater","flatten","animatedProp","eventNames","eventName","listeners","render","platformProps","select","web","default","collapsable","_objectSpread","displayName","forwardRef"],"sources":["/Users/duraanali/Pictures/Familyga App/frontend/node_modules/react-native-reanimated/lib/createAnimatedComponent.js"],"sourcesContent":["import React from 'react';\nimport { findNodeHandle, Platform, StyleSheet } from 'react-native';\nimport ReanimatedEventEmitter from './ReanimatedEventEmitter';\n// @ts-ignore JS file\nimport AnimatedEvent from './reanimated1/core/AnimatedEvent';\n// @ts-ignore JS file\nimport AnimatedNode from './reanimated1/core/AnimatedNode';\n// @ts-ignore JS file\nimport AnimatedValue from './reanimated1/core/AnimatedValue';\n// @ts-ignore JS file\nimport { createOrReusePropsNode } from './reanimated1/core/AnimatedProps';\nimport WorkletEventHandler from './reanimated2/WorkletEventHandler';\nimport setAndForwardRef from './setAndForwardRef';\nimport './reanimated2/layoutReanimation/LayoutAnimationRepository';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from './ConfigHelper';\nimport { RNRenderer } from './reanimated2/platform-specific/RNRenderer';\nimport { makeMutable, runOnUI, enableLayoutAnimations, } from './reanimated2/core';\nimport { DefaultEntering, DefaultExiting, DefaultLayout, } from './reanimated2/layoutReanimation/defaultAnimations/Default';\nimport { isJest, isChromeDebugger, shouldBeUseWeb, } from './reanimated2/PlatformChecker';\nimport { initialUpdaterRun } from './reanimated2/animation';\nconst NODE_MAPPING = new Map();\nfunction listener(data) {\n    const component = NODE_MAPPING.get(data.viewTag);\n    component && component._updateFromNative(data.props);\n}\nfunction dummyListener() {\n    // empty listener we use to assign to listener properties for which animated\n    // event is used.\n}\nfunction hasAnimatedNodes(value) {\n    if (value instanceof AnimatedNode) {\n        return true;\n    }\n    if (Array.isArray(value)) {\n        return value.some((item) => hasAnimatedNodes(item));\n    }\n    if (value && typeof value === 'object') {\n        return Object.keys(value).some((key) => hasAnimatedNodes(value[key]));\n    }\n    return false;\n}\nfunction flattenArray(array) {\n    if (!Array.isArray(array)) {\n        return [array];\n    }\n    const resultArr = [];\n    const _flattenArray = (arr) => {\n        arr.forEach((item) => {\n            if (Array.isArray(item)) {\n                _flattenArray(item);\n            }\n            else {\n                resultArr.push(item);\n            }\n        });\n    };\n    _flattenArray(array);\n    return resultArr;\n}\nfunction onlyAnimatedStyles(styles) {\n    return styles.filter((style) => style === null || style === void 0 ? void 0 : style.viewDescriptors);\n}\nfunction isSameAnimatedStyle(style1, style2) {\n    // We cannot use equality check to compare useAnimatedStyle outputs directly.\n    // Instead, we can compare its viewsRefs.\n    return (style1 === null || style1 === void 0 ? void 0 : style1.viewsRef) === (style2 === null || style2 === void 0 ? void 0 : style2.viewsRef);\n}\nconst isSameAnimatedProps = isSameAnimatedStyle;\nconst has = (key, x) => {\n    if (typeof x === 'function' || typeof x === 'object') {\n        if (x === null || x === undefined) {\n            return false;\n        }\n        else {\n            return key in x;\n        }\n    }\n    return false;\n};\nexport default function createAnimatedComponent(Component, options) {\n    invariant(typeof Component !== 'function' ||\n        (Component.prototype && Component.prototype.isReactComponent), '`createAnimatedComponent` does not support stateless functional components; ' +\n        'use a class component instead.');\n    class AnimatedComponent extends React.Component {\n        constructor(props) {\n            super(props);\n            this._invokeAnimatedPropsCallbackOnMount = false;\n            this._styles = null;\n            this._viewTag = -1;\n            this._isFirstRender = true;\n            this.animatedStyle = { value: {} };\n            this.initialStyle = {};\n            this._component = null;\n            // The system is best designed when setNativeProps is implemented. It is\n            // able to avoid re-rendering and directly set the attributes that changed.\n            // However, setNativeProps can only be implemented on native components\n            // If you want to animate a composite component, you need to re-render it.\n            // In this case, we have a fallback that uses forceUpdate.\n            this._animatedPropsCallback = () => {\n                if (this._component == null) {\n                    // AnimatedProps is created in will-mount because it's used in render.\n                    // But this callback may be invoked before mount in async mode,\n                    // In which case we should defer the setNativeProps() call.\n                    // React may throw away uncommitted work in async mode,\n                    // So a deferred call won't always be invoked.\n                    this._invokeAnimatedPropsCallbackOnMount = true;\n                }\n                else if (typeof this._component.setNativeProps !== 'function') {\n                    this.forceUpdate();\n                }\n                else {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    this._component.setNativeProps(this._propsAnimated.__getValue());\n                }\n            };\n            this._setComponentRef = setAndForwardRef({\n                getForwardedRef: () => this.props.forwardedRef,\n                setLocalRef: (ref) => {\n                    // TODO update config\n                    const tag = findNodeHandle(ref);\n                    if (!shouldBeUseWeb() &&\n                        (this.props.layout || this.props.entering || this.props.exiting) &&\n                        tag != null) {\n                        enableLayoutAnimations(true, false);\n                        let layout = this.props.layout ? this.props.layout : DefaultLayout;\n                        let entering = this.props.entering\n                            ? this.props.entering\n                            : DefaultEntering;\n                        let exiting = this.props.exiting\n                            ? this.props.exiting\n                            : DefaultExiting;\n                        if (has('build', layout)) {\n                            layout = layout.build();\n                        }\n                        if (has('build', entering)) {\n                            entering = entering.build();\n                        }\n                        if (has('build', exiting)) {\n                            exiting = exiting.build();\n                        }\n                        const config = {\n                            layout,\n                            entering,\n                            exiting,\n                            sv: this.sv,\n                        };\n                        runOnUI(() => {\n                            'worklet';\n                            global.LayoutAnimationRepository.registerConfig(tag, config);\n                        })();\n                    }\n                    if (ref !== this._component) {\n                        this._component = ref;\n                    }\n                },\n            });\n            this._attachProps(this.props);\n            if (isJest()) {\n                this.animatedStyle = { value: {} };\n            }\n            this.sv = makeMutable({});\n        }\n        componentWillUnmount() {\n            this._detachPropUpdater();\n            this._propsAnimated && this._propsAnimated.__detach();\n            this._detachNativeEvents();\n            this._detachStyles();\n            this.sv = null;\n        }\n        componentDidMount() {\n            if (this._invokeAnimatedPropsCallbackOnMount) {\n                this._invokeAnimatedPropsCallbackOnMount = false;\n                this._animatedPropsCallback();\n            }\n            this._propsAnimated &&\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                this._propsAnimated.setNativeView(this._component);\n            this._attachNativeEvents();\n            this._attachPropUpdater();\n            this._attachAnimatedStyles();\n        }\n        _getEventViewRef() {\n            var _a;\n            // Make sure to get the scrollable node for components that implement\n            // `ScrollResponder.Mixin`.\n            return ((_a = this._component) === null || _a === void 0 ? void 0 : _a.getScrollableNode) ? this._component.getScrollableNode()\n                : this._component;\n        }\n        _attachNativeEvents() {\n            const node = this._getEventViewRef();\n            const viewTag = findNodeHandle((options === null || options === void 0 ? void 0 : options.setNativeProps) ? this : node);\n            for (const key in this.props) {\n                const prop = this.props[key];\n                if (prop instanceof AnimatedEvent) {\n                    prop.attachEvent(node, key);\n                }\n                else if (has('current', prop) &&\n                    prop.current instanceof WorkletEventHandler) {\n                    prop.current.registerForEvents(viewTag, key);\n                }\n            }\n        }\n        _detachNativeEvents() {\n            const node = this._getEventViewRef();\n            for (const key in this.props) {\n                const prop = this.props[key];\n                if (prop instanceof AnimatedEvent) {\n                    prop.detachEvent(node, key);\n                }\n                else if (has('current', prop) &&\n                    prop.current instanceof WorkletEventHandler) {\n                    prop.current.unregisterFromEvents();\n                }\n            }\n        }\n        _detachStyles() {\n            var _a;\n            if (Platform.OS === 'web' && this._styles !== null) {\n                for (const style of this._styles) {\n                    if (style === null || style === void 0 ? void 0 : style.viewsRef) {\n                        style.viewsRef.remove(this);\n                    }\n                }\n            }\n            else if (this._viewTag !== -1 && this._styles !== null) {\n                for (const style of this._styles) {\n                    style.viewDescriptors.remove(this._viewTag);\n                }\n                if ((_a = this.props.animatedProps) === null || _a === void 0 ? void 0 : _a.viewDescriptors) {\n                    this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n                }\n            }\n        }\n        _reattachNativeEvents(prevProps) {\n            const node = this._getEventViewRef();\n            const attached = new Set();\n            const nextEvts = new Set();\n            let viewTag;\n            for (const key in this.props) {\n                const prop = this.props[key];\n                if (prop instanceof AnimatedEvent) {\n                    nextEvts.add(prop.__nodeID);\n                }\n                else if (has('current', prop) &&\n                    prop.current instanceof WorkletEventHandler) {\n                    if (viewTag === undefined) {\n                        viewTag = prop.current.viewTag;\n                    }\n                }\n            }\n            for (const key in prevProps) {\n                const prop = this.props[key];\n                if (prop instanceof AnimatedEvent) {\n                    if (!nextEvts.has(prop.__nodeID)) {\n                        // event was in prev props but not in current props, we detach\n                        prop.detachEvent(node, key);\n                    }\n                    else {\n                        // event was in prev and is still in current props\n                        attached.add(prop.__nodeID);\n                    }\n                }\n                else if (has('current', prop) &&\n                    prop.current instanceof WorkletEventHandler &&\n                    prop.current.reattachNeeded) {\n                    prop.current.unregisterFromEvents();\n                }\n            }\n            for (const key in this.props) {\n                const prop = this.props[key];\n                if (prop instanceof AnimatedEvent &&\n                    !attached.has(prop.__nodeID)) {\n                    // not yet attached\n                    prop.attachEvent(node, key);\n                }\n                else if (has('current', prop) &&\n                    prop.current instanceof WorkletEventHandler &&\n                    prop.current.reattachNeeded) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    prop.current.registerForEvents(viewTag, key);\n                    prop.current.reattachNeeded = false;\n                }\n            }\n        }\n        _attachProps(nextProps) {\n            const oldPropsAnimated = this._propsAnimated;\n            this._propsAnimated = createOrReusePropsNode(nextProps, this._animatedPropsCallback, oldPropsAnimated);\n            // If prop node has been reused we don't need to call into \"__detach\"\n            if (oldPropsAnimated !== this._propsAnimated) {\n                // When you call detach, it removes the element from the parent list\n                // of children. If it goes to 0, then the parent also detaches itself\n                // and so on.\n                // An optimization is to attach the new elements and THEN detach the old\n                // ones instead of detaching and THEN attaching.\n                // This way the intermediate state isn't to go to 0 and trigger\n                // this expensive recursive detaching to then re-attach everything on\n                // the very next operation.\n                oldPropsAnimated && oldPropsAnimated.__detach();\n            }\n        }\n        _updateFromNative(props) {\n            var _a, _b;\n            if (options === null || options === void 0 ? void 0 : options.setNativeProps) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                options.setNativeProps(this._component, props);\n            }\n            else {\n                // eslint-disable-next-line no-unused-expressions\n                (_b = (_a = this._component) === null || _a === void 0 ? void 0 : _a.setNativeProps) === null || _b === void 0 ? void 0 : _b.call(_a, props);\n            }\n        }\n        _attachPropUpdater() {\n            const viewTag = findNodeHandle(this);\n            NODE_MAPPING.set(viewTag, this);\n            if (NODE_MAPPING.size === 1) {\n                ReanimatedEventEmitter.addListener('onReanimatedPropsChange', listener);\n            }\n        }\n        _attachAnimatedStyles() {\n            var _a, _b, _c;\n            const styles = this.props.style\n                ? onlyAnimatedStyles(flattenArray(this.props.style))\n                : [];\n            const prevStyles = this._styles;\n            this._styles = styles;\n            const prevAnimatedProps = this._animatedProps;\n            this._animatedProps = this.props.animatedProps;\n            let viewTag;\n            let viewName;\n            if (Platform.OS === 'web') {\n                viewTag = findNodeHandle(this);\n                viewName = null;\n            }\n            else {\n                // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n                const hostInstance = RNRenderer.findHostInstance_DEPRECATED(this);\n                if (!hostInstance) {\n                    throw new Error('Cannot find host instance for this component. Maybe it renders nothing?');\n                }\n                // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\n                viewTag = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance._nativeTag;\n                /**\n                 * RN uses viewConfig for components for storing different properties of the component(example: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollViewViewConfig.js#L16).\n                 * The name we're looking for is in the field named uiViewClassName.\n                 */\n                viewName = (_a = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig) === null || _a === void 0 ? void 0 : _a.uiViewClassName;\n                // update UI props whitelist for this view\n                const hasReanimated2Props = ((_b = this.props.animatedProps) === null || _b === void 0 ? void 0 : _b.viewDescriptors) || styles.length;\n                if (hasReanimated2Props && (hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig)) {\n                    adaptViewConfig(hostInstance.viewConfig);\n                }\n            }\n            this._viewTag = viewTag;\n            // remove old styles\n            if (prevStyles) {\n                // in most of the cases, views have only a single animated style and it remains unchanged\n                const hasOneSameStyle = styles.length === 1 &&\n                    prevStyles.length === 1 &&\n                    isSameAnimatedStyle(styles[0], prevStyles[0]);\n                if (!hasOneSameStyle) {\n                    // otherwise, remove each style that is not present in new styles\n                    for (const prevStyle of prevStyles) {\n                        const isPresent = styles.some((style) => isSameAnimatedStyle(style, prevStyle));\n                        if (!isPresent) {\n                            prevStyle.viewDescriptors.remove(viewTag);\n                        }\n                    }\n                }\n            }\n            styles.forEach((style) => {\n                style.viewDescriptors.add({ tag: viewTag, name: viewName });\n                if (isJest()) {\n                    /**\n                     * We need to connect Jest's TestObject instance whose contains just props object\n                     * with the updateProps() function where we update the properties of the component.\n                     * We can't update props object directly because TestObject contains a copy of props - look at render function:\n                     * const props = this._filterNonAnimatedProps(this.props);\n                     */\n                    this.animatedStyle.value = Object.assign(Object.assign({}, this.animatedStyle.value), style.initial.value);\n                    style.animatedStyle.current = this.animatedStyle;\n                }\n            });\n            // detach old animatedProps\n            if (prevAnimatedProps &&\n                !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\n                prevAnimatedProps.viewDescriptors.remove(viewTag);\n            }\n            // attach animatedProps property\n            if ((_c = this.props.animatedProps) === null || _c === void 0 ? void 0 : _c.viewDescriptors) {\n                this.props.animatedProps.viewDescriptors.add({\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    tag: viewTag,\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    name: viewName,\n                });\n            }\n        }\n        _detachPropUpdater() {\n            const viewTag = findNodeHandle(this);\n            NODE_MAPPING.delete(viewTag);\n            if (NODE_MAPPING.size === 0) {\n                ReanimatedEventEmitter.removeAllListeners('onReanimatedPropsChange');\n            }\n        }\n        componentDidUpdate(prevProps) {\n            this._attachProps(this.props);\n            this._reattachNativeEvents(prevProps);\n            this._propsAnimated &&\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                this._propsAnimated.setNativeView(this._component);\n            this._attachAnimatedStyles();\n        }\n        _filterNonAnimatedStyle(inputStyle) {\n            const style = {};\n            for (const key in inputStyle) {\n                const value = inputStyle[key];\n                if (!hasAnimatedNodes(value)) {\n                    style[key] = value;\n                }\n                else if (value instanceof AnimatedValue) {\n                    // if any style in animated component is set directly to the `Value` we set those styles to the first value of `Value` node in order\n                    // to avoid flash of default styles when `Value` is being asynchrounously sent via bridge and initialized in the native side.\n                    style[key] = value._startingValue;\n                }\n            }\n            return style;\n        }\n        _filterNonAnimatedProps(inputProps) {\n            const props = {};\n            for (const key in inputProps) {\n                const value = inputProps[key];\n                if (key === 'style') {\n                    const styleProp = inputProps.style;\n                    const styles = flattenArray(styleProp !== null && styleProp !== void 0 ? styleProp : []);\n                    const processedStyle = styles.map((style) => {\n                        if (style && style.viewDescriptors) {\n                            // this is how we recognize styles returned by useAnimatedStyle\n                            style.viewsRef.add(this);\n                            if (this._isFirstRender) {\n                                this.initialStyle = Object.assign(Object.assign({}, style.initial.value), initialUpdaterRun(style.initial.updater));\n                            }\n                            return this.initialStyle;\n                        }\n                        else {\n                            return style;\n                        }\n                    });\n                    props[key] = this._filterNonAnimatedStyle(StyleSheet.flatten(processedStyle));\n                }\n                else if (key === 'animatedProps') {\n                    const animatedProp = inputProps.animatedProps;\n                    if (animatedProp.initial !== undefined) {\n                        Object.keys(animatedProp.initial.value).forEach((key) => {\n                            var _a, _b;\n                            props[key] = (_a = animatedProp.initial) === null || _a === void 0 ? void 0 : _a.value[key];\n                            (_b = animatedProp.viewsRef) === null || _b === void 0 ? void 0 : _b.add(this);\n                        });\n                    }\n                }\n                else if (value instanceof AnimatedEvent) {\n                    // we cannot filter out event listeners completely as some components\n                    // rely on having a callback registered in order to generate events\n                    // alltogether. Therefore we provide a dummy callback here to allow\n                    // native event dispatcher to hijack events.\n                    props[key] = dummyListener;\n                }\n                else if (has('current', value) &&\n                    value.current instanceof WorkletEventHandler) {\n                    if (value.current.eventNames.length > 0) {\n                        value.current.eventNames.forEach((eventName) => {\n                            props[eventName] = has('listeners', value.current)\n                                ? value.current.listeners[eventName]\n                                : dummyListener;\n                        });\n                    }\n                    else {\n                        props[key] = dummyListener;\n                    }\n                }\n                else if (!(value instanceof AnimatedNode)) {\n                    if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n                        props[key] = value;\n                    }\n                }\n                else if (value instanceof AnimatedValue) {\n                    // if any prop in animated component is set directly to the `Value` we set those props to the first value of `Value` node in order\n                    // to avoid default values for a short moment when `Value` is being asynchrounously sent via bridge and initialized in the native side.\n                    props[key] = value._startingValue;\n                }\n            }\n            return props;\n        }\n        render() {\n            const props = this._filterNonAnimatedProps(this.props);\n            if (isJest()) {\n                props.animatedStyle = this.animatedStyle;\n            }\n            if (this._isFirstRender) {\n                this._isFirstRender = false;\n            }\n            const platformProps = Platform.select({\n                web: {},\n                default: { collapsable: false },\n            });\n            return (<Component {...props} ref={this._setComponentRef} {...platformProps}/>);\n        }\n    }\n    AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n    return React.forwardRef((props, ref) => {\n        return (<AnimatedComponent {...props} {...(ref === null ? null : { forwardedRef: ref })}/>);\n    });\n}\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,cAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAE1B,OAAOC,sBAAsB;AAE7B,OAAOC,aAAa;AAEpB,OAAOC,YAAY;AAEnB,OAAOC,aAAa;AAEpB,SAASC,sBAAsB;AAC/B,OAAOC,mBAAmB;AAC1B,OAAOC,gBAAgB;AACvB;AACA,OAAOC,SAAS,MAAM,WAAW;AACjC,SAASC,eAAe;AACxB,SAASC,UAAU;AACnB,SAASC,WAAW,EAAEC,OAAO,EAAEC,sBAAsB;AACrD,SAASC,eAAe,EAAEC,cAAc,EAAEC,aAAa;AACvD,SAASC,MAAM,EAAEC,gBAAgB,EAAEC,cAAc;AACjD,SAASC,iBAAiB;AAAkC,SAAAC,GAAA,IAAAC,IAAA;AAC5D,IAAMC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;AAC9B,SAASC,QAAQA,CAACC,IAAI,EAAE;EACpB,IAAMC,SAAS,GAAGJ,YAAY,CAACK,GAAG,CAACF,IAAI,CAACG,OAAO,CAAC;EAChDF,SAAS,IAAIA,SAAS,CAACG,iBAAiB,CAACJ,IAAI,CAACK,KAAK,CAAC;AACxD;AACA,SAASC,aAAaA,CAAA,EAAG,CAGzB;AACA,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAC7B,IAAIA,KAAK,YAAY/B,YAAY,EAAE;IAC/B,OAAO,IAAI;EACf;EACA,IAAIgC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;IACtB,OAAOA,KAAK,CAACG,IAAI,CAAC,UAACC,IAAI;MAAA,OAAKL,gBAAgB,CAACK,IAAI,CAAC;IAAA,EAAC;EACvD;EACA,IAAIJ,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IACpC,OAAOK,MAAM,CAACC,IAAI,CAACN,KAAK,CAAC,CAACG,IAAI,CAAC,UAACI,GAAG;MAAA,OAAKR,gBAAgB,CAACC,KAAK,CAACO,GAAG,CAAC,CAAC;IAAA,EAAC;EACzE;EACA,OAAO,KAAK;AAChB;AACA,SAASC,YAAYA,CAACC,KAAK,EAAE;EACzB,IAAI,CAACR,KAAK,CAACC,OAAO,CAACO,KAAK,CAAC,EAAE;IACvB,OAAO,CAACA,KAAK,CAAC;EAClB;EACA,IAAMC,SAAS,GAAG,EAAE;EACpB,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,GAAG,EAAK;IAC3BA,GAAG,CAACC,OAAO,CAAC,UAACT,IAAI,EAAK;MAClB,IAAIH,KAAK,CAACC,OAAO,CAACE,IAAI,CAAC,EAAE;QACrBO,aAAa,CAACP,IAAI,CAAC;MACvB,CAAC,MACI;QACDM,SAAS,CAACI,IAAI,CAACV,IAAI,CAAC;MACxB;IACJ,CAAC,CAAC;EACN,CAAC;EACDO,aAAa,CAACF,KAAK,CAAC;EACpB,OAAOC,SAAS;AACpB;AACA,SAASK,kBAAkBA,CAACC,MAAM,EAAE;EAChC,OAAOA,MAAM,CAACC,MAAM,CAAC,UAACC,KAAK;IAAA,OAAKA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACC,eAAe;EAAA,EAAC;AACxG;AACA,SAASC,mBAAmBA,CAACC,MAAM,EAAEC,MAAM,EAAE;EAGzC,OAAO,CAACD,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACE,QAAQ,OAAOD,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACC,QAAQ,CAAC;AAClJ;AACA,IAAMC,mBAAmB,GAAGJ,mBAAmB;AAC/C,IAAMK,GAAG,GAAG,SAANA,GAAGA,CAAIlB,GAAG,EAAEmB,CAAC,EAAK;EACpB,IAAI,OAAOA,CAAC,KAAK,UAAU,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;IAClD,IAAIA,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAKC,SAAS,EAAE;MAC/B,OAAO,KAAK;IAChB,CAAC,MACI;MACD,OAAOpB,GAAG,IAAImB,CAAC;IACnB;EACJ;EACA,OAAO,KAAK;AAChB,CAAC;AACD,eAAe,SAASE,uBAAuBA,CAACC,SAAS,EAAEC,OAAO,EAAE;EAChExD,SAAS,CAAC,OAAOuD,SAAS,KAAK,UAAU,IACpCA,SAAS,CAACE,SAAS,IAAIF,SAAS,CAACE,SAAS,CAACC,gBAAiB,EAAE,8EAA8E,GAC7I,gCAAgC,CAAC;EAAC,IAChCC,iBAAiB,aAAAC,gBAAA;IAAAC,SAAA,CAAAF,iBAAA,EAAAC,gBAAA;IAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,iBAAA;IACnB,SAAAA,kBAAYpC,KAAK,EAAE;MAAA,IAAAyC,KAAA;MAAAC,eAAA,OAAAN,iBAAA;MACfK,KAAA,GAAAF,MAAA,CAAAI,IAAA,OAAM3C,KAAK;MACXyC,KAAA,CAAKG,mCAAmC,GAAG,KAAK;MAChDH,KAAA,CAAKI,OAAO,GAAG,IAAI;MACnBJ,KAAA,CAAKK,QAAQ,GAAG,CAAC,CAAC;MAClBL,KAAA,CAAKM,cAAc,GAAG,IAAI;MAC1BN,KAAA,CAAKO,aAAa,GAAG;QAAE7C,KAAK,EAAE,CAAC;MAAE,CAAC;MAClCsC,KAAA,CAAKQ,YAAY,GAAG,CAAC,CAAC;MACtBR,KAAA,CAAKS,UAAU,GAAG,IAAI;MAMtBT,KAAA,CAAKU,sBAAsB,GAAG,YAAM;QAChC,IAAIV,KAAA,CAAKS,UAAU,IAAI,IAAI,EAAE;UAMzBT,KAAA,CAAKG,mCAAmC,GAAG,IAAI;QACnD,CAAC,MACI,IAAI,OAAOH,KAAA,CAAKS,UAAU,CAACE,cAAc,KAAK,UAAU,EAAE;UAC3DX,KAAA,CAAKY,WAAW,CAAC,CAAC;QACtB,CAAC,MACI;UAEDZ,KAAA,CAAKS,UAAU,CAACE,cAAc,CAACX,KAAA,CAAKa,cAAc,CAACC,UAAU,CAAC,CAAC,CAAC;QACpE;MACJ,CAAC;MACDd,KAAA,CAAKe,gBAAgB,GAAGhF,gBAAgB,CAAC;QACrCiF,eAAe,EAAE,SAAAA,gBAAA;UAAA,OAAMhB,KAAA,CAAKzC,KAAK,CAAC0D,YAAY;QAAA;QAC9CC,WAAW,EAAE,SAAAA,YAACC,GAAG,EAAK;UAElB,IAAMC,GAAG,GAAG9F,cAAc,CAAC6F,GAAG,CAAC;UAC/B,IAAI,CAACxE,cAAc,CAAC,CAAC,KAChBqD,KAAA,CAAKzC,KAAK,CAAC8D,MAAM,IAAIrB,KAAA,CAAKzC,KAAK,CAAC+D,QAAQ,IAAItB,KAAA,CAAKzC,KAAK,CAACgE,OAAO,CAAC,IAChEH,GAAG,IAAI,IAAI,EAAE;YACb/E,sBAAsB,CAAC,IAAI,EAAE,KAAK,CAAC;YACnC,IAAIgF,MAAM,GAAGrB,KAAA,CAAKzC,KAAK,CAAC8D,MAAM,GAAGrB,KAAA,CAAKzC,KAAK,CAAC8D,MAAM,GAAG7E,aAAa;YAClE,IAAI8E,QAAQ,GAAGtB,KAAA,CAAKzC,KAAK,CAAC+D,QAAQ,GAC5BtB,KAAA,CAAKzC,KAAK,CAAC+D,QAAQ,GACnBhF,eAAe;YACrB,IAAIiF,OAAO,GAAGvB,KAAA,CAAKzC,KAAK,CAACgE,OAAO,GAC1BvB,KAAA,CAAKzC,KAAK,CAACgE,OAAO,GAClBhF,cAAc;YACpB,IAAI4C,GAAG,CAAC,OAAO,EAAEkC,MAAM,CAAC,EAAE;cACtBA,MAAM,GAAGA,MAAM,CAACG,KAAK,CAAC,CAAC;YAC3B;YACA,IAAIrC,GAAG,CAAC,OAAO,EAAEmC,QAAQ,CAAC,EAAE;cACxBA,QAAQ,GAAGA,QAAQ,CAACE,KAAK,CAAC,CAAC;YAC/B;YACA,IAAIrC,GAAG,CAAC,OAAO,EAAEoC,OAAO,CAAC,EAAE;cACvBA,OAAO,GAAGA,OAAO,CAACC,KAAK,CAAC,CAAC;YAC7B;YACA,IAAMC,MAAM,GAAG;cACXJ,MAAM,EAANA,MAAM;cACNC,QAAQ,EAARA,QAAQ;cACRC,OAAO,EAAPA,OAAO;cACPG,EAAE,EAAE1B,KAAA,CAAK0B;YACb,CAAC;YACDtF,OAAO;cAAA,IAAAuF,EAAA,YAAAA,GAAA,EAAO;gBAEVC,MAAM,CAACC,yBAAyB,CAACC,cAAc,CAACV,GAAG,EAAEK,MAAM,CAAC;cAChE,CAAC;cAAAE,EAAA,CAAAI,QAAA;gBAAAX,GAAA,EApJyBA,GAAG;gBAAAK,MAAA,EAAEA;cAAM;cAAAE,EAAA,CAAAK,QAAA;cAAAL,EAAA,CAAAM,aAAA;cAAAN,EAAA,CAAAO,UAAA;cAAA,OAAAP,EAAA;YAAA,GAoJpC,CAAC,CAAC,CAAC;UACR;UACA,IAAIR,GAAG,KAAKnB,KAAA,CAAKS,UAAU,EAAE;YACzBT,KAAA,CAAKS,UAAU,GAAGU,GAAG;UACzB;QACJ;MACJ,CAAC,CAAC;MACFnB,KAAA,CAAKmC,YAAY,CAACnC,KAAA,CAAKzC,KAAK,CAAC;MAC7B,IAAId,MAAM,CAAC,CAAC,EAAE;QACVuD,KAAA,CAAKO,aAAa,GAAG;UAAE7C,KAAK,EAAE,CAAC;QAAE,CAAC;MACtC;MACAsC,KAAA,CAAK0B,EAAE,GAAGvF,WAAW,CAAC,CAAC,CAAC,CAAC;MAAC,OAAA6D,KAAA;IAC9B;IAACoC,YAAA,CAAAzC,iBAAA;MAAA1B,GAAA;MAAAP,KAAA,EACD,SAAA2E,qBAAA,EAAuB;QACnB,IAAI,CAACC,kBAAkB,CAAC,CAAC;QACzB,IAAI,CAACzB,cAAc,IAAI,IAAI,CAACA,cAAc,CAAC0B,QAAQ,CAAC,CAAC;QACrD,IAAI,CAACC,mBAAmB,CAAC,CAAC;QAC1B,IAAI,CAACC,aAAa,CAAC,CAAC;QACpB,IAAI,CAACf,EAAE,GAAG,IAAI;MAClB;IAAC;MAAAzD,GAAA;MAAAP,KAAA,EACD,SAAAgF,kBAAA,EAAoB;QAChB,IAAI,IAAI,CAACvC,mCAAmC,EAAE;UAC1C,IAAI,CAACA,mCAAmC,GAAG,KAAK;UAChD,IAAI,CAACO,sBAAsB,CAAC,CAAC;QACjC;QACA,IAAI,CAACG,cAAc,IAEf,IAAI,CAACA,cAAc,CAAC8B,aAAa,CAAC,IAAI,CAAClC,UAAU,CAAC;QACtD,IAAI,CAACmC,mBAAmB,CAAC,CAAC;QAC1B,IAAI,CAACC,kBAAkB,CAAC,CAAC;QACzB,IAAI,CAACC,qBAAqB,CAAC,CAAC;MAChC;IAAC;MAAA7E,GAAA;MAAAP,KAAA,EACD,SAAAqF,iBAAA,EAAmB;QACf,IAAIC,EAAE;QAGN,OAAO,CAAC,CAACA,EAAE,GAAG,IAAI,CAACvC,UAAU,MAAM,IAAI,IAAIuC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,iBAAiB,IAAI,IAAI,CAACxC,UAAU,CAACwC,iBAAiB,CAAC,CAAC,GACzH,IAAI,CAACxC,UAAU;MACzB;IAAC;MAAAxC,GAAA;MAAAP,KAAA,EACD,SAAAkF,oBAAA,EAAsB;QAClB,IAAMM,IAAI,GAAG,IAAI,CAACH,gBAAgB,CAAC,CAAC;QACpC,IAAM1F,OAAO,GAAG/B,cAAc,CAAC,CAACkE,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACmB,cAAc,IAAI,IAAI,GAAGuC,IAAI,CAAC;QACxH,KAAK,IAAMjF,GAAG,IAAI,IAAI,CAACV,KAAK,EAAE;UAC1B,IAAM4F,IAAI,GAAG,IAAI,CAAC5F,KAAK,CAACU,GAAG,CAAC;UAC5B,IAAIkF,IAAI,YAAYzH,aAAa,EAAE;YAC/ByH,IAAI,CAACC,WAAW,CAACF,IAAI,EAAEjF,GAAG,CAAC;UAC/B,CAAC,MACI,IAAIkB,GAAG,CAAC,SAAS,EAAEgE,IAAI,CAAC,IACzBA,IAAI,CAACE,OAAO,YAAYvH,mBAAmB,EAAE;YAC7CqH,IAAI,CAACE,OAAO,CAACC,iBAAiB,CAACjG,OAAO,EAAEY,GAAG,CAAC;UAChD;QACJ;MACJ;IAAC;MAAAA,GAAA;MAAAP,KAAA,EACD,SAAA8E,oBAAA,EAAsB;QAClB,IAAMU,IAAI,GAAG,IAAI,CAACH,gBAAgB,CAAC,CAAC;QACpC,KAAK,IAAM9E,GAAG,IAAI,IAAI,CAACV,KAAK,EAAE;UAC1B,IAAM4F,IAAI,GAAG,IAAI,CAAC5F,KAAK,CAACU,GAAG,CAAC;UAC5B,IAAIkF,IAAI,YAAYzH,aAAa,EAAE;YAC/ByH,IAAI,CAACI,WAAW,CAACL,IAAI,EAAEjF,GAAG,CAAC;UAC/B,CAAC,MACI,IAAIkB,GAAG,CAAC,SAAS,EAAEgE,IAAI,CAAC,IACzBA,IAAI,CAACE,OAAO,YAAYvH,mBAAmB,EAAE;YAC7CqH,IAAI,CAACE,OAAO,CAACG,oBAAoB,CAAC,CAAC;UACvC;QACJ;MACJ;IAAC;MAAAvF,GAAA;MAAAP,KAAA,EACD,SAAA+E,cAAA,EAAgB;QACZ,IAAIO,EAAE;QACN,IAAIzH,QAAQ,CAACkI,EAAE,KAAK,KAAK,IAAI,IAAI,CAACrD,OAAO,KAAK,IAAI,EAAE;UAChD,KAAK,IAAMxB,KAAK,IAAI,IAAI,CAACwB,OAAO,EAAE;YAC9B,IAAIxB,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACK,QAAQ,EAAE;cAC9DL,KAAK,CAACK,QAAQ,CAACyE,MAAM,CAAC,IAAI,CAAC;YAC/B;UACJ;QACJ,CAAC,MACI,IAAI,IAAI,CAACrD,QAAQ,KAAK,CAAC,CAAC,IAAI,IAAI,CAACD,OAAO,KAAK,IAAI,EAAE;UACpD,KAAK,IAAMxB,MAAK,IAAI,IAAI,CAACwB,OAAO,EAAE;YAC9BxB,MAAK,CAACC,eAAe,CAAC6E,MAAM,CAAC,IAAI,CAACrD,QAAQ,CAAC;UAC/C;UACA,IAAI,CAAC2C,EAAE,GAAG,IAAI,CAACzF,KAAK,CAACoG,aAAa,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACnE,eAAe,EAAE;YACzF,IAAI,CAACtB,KAAK,CAACoG,aAAa,CAAC9E,eAAe,CAAC6E,MAAM,CAAC,IAAI,CAACrD,QAAQ,CAAC;UAClE;QACJ;MACJ;IAAC;MAAApC,GAAA;MAAAP,KAAA,EACD,SAAAkG,sBAAsBC,SAAS,EAAE;QAC7B,IAAMX,IAAI,GAAG,IAAI,CAACH,gBAAgB,CAAC,CAAC;QACpC,IAAMe,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;QAC1B,IAAMC,QAAQ,GAAG,IAAID,GAAG,CAAC,CAAC;QAC1B,IAAI1G,OAAO;QACX,KAAK,IAAMY,GAAG,IAAI,IAAI,CAACV,KAAK,EAAE;UAC1B,IAAM4F,IAAI,GAAG,IAAI,CAAC5F,KAAK,CAACU,GAAG,CAAC;UAC5B,IAAIkF,IAAI,YAAYzH,aAAa,EAAE;YAC/BsI,QAAQ,CAACC,GAAG,CAACd,IAAI,CAACe,QAAQ,CAAC;UAC/B,CAAC,MACI,IAAI/E,GAAG,CAAC,SAAS,EAAEgE,IAAI,CAAC,IACzBA,IAAI,CAACE,OAAO,YAAYvH,mBAAmB,EAAE;YAC7C,IAAIuB,OAAO,KAAKgC,SAAS,EAAE;cACvBhC,OAAO,GAAG8F,IAAI,CAACE,OAAO,CAAChG,OAAO;YAClC;UACJ;QACJ;QACA,KAAK,IAAMY,IAAG,IAAI4F,SAAS,EAAE;UACzB,IAAMV,KAAI,GAAG,IAAI,CAAC5F,KAAK,CAACU,IAAG,CAAC;UAC5B,IAAIkF,KAAI,YAAYzH,aAAa,EAAE;YAC/B,IAAI,CAACsI,QAAQ,CAAC7E,GAAG,CAACgE,KAAI,CAACe,QAAQ,CAAC,EAAE;cAE9Bf,KAAI,CAACI,WAAW,CAACL,IAAI,EAAEjF,IAAG,CAAC;YAC/B,CAAC,MACI;cAED6F,QAAQ,CAACG,GAAG,CAACd,KAAI,CAACe,QAAQ,CAAC;YAC/B;UACJ,CAAC,MACI,IAAI/E,GAAG,CAAC,SAAS,EAAEgE,KAAI,CAAC,IACzBA,KAAI,CAACE,OAAO,YAAYvH,mBAAmB,IAC3CqH,KAAI,CAACE,OAAO,CAACc,cAAc,EAAE;YAC7BhB,KAAI,CAACE,OAAO,CAACG,oBAAoB,CAAC,CAAC;UACvC;QACJ;QACA,KAAK,IAAMvF,KAAG,IAAI,IAAI,CAACV,KAAK,EAAE;UAC1B,IAAM4F,MAAI,GAAG,IAAI,CAAC5F,KAAK,CAACU,KAAG,CAAC;UAC5B,IAAIkF,MAAI,YAAYzH,aAAa,IAC7B,CAACoI,QAAQ,CAAC3E,GAAG,CAACgE,MAAI,CAACe,QAAQ,CAAC,EAAE;YAE9Bf,MAAI,CAACC,WAAW,CAACF,IAAI,EAAEjF,KAAG,CAAC;UAC/B,CAAC,MACI,IAAIkB,GAAG,CAAC,SAAS,EAAEgE,MAAI,CAAC,IACzBA,MAAI,CAACE,OAAO,YAAYvH,mBAAmB,IAC3CqH,MAAI,CAACE,OAAO,CAACc,cAAc,EAAE;YAE7BhB,MAAI,CAACE,OAAO,CAACC,iBAAiB,CAACjG,OAAO,EAAEY,KAAG,CAAC;YAC5CkF,MAAI,CAACE,OAAO,CAACc,cAAc,GAAG,KAAK;UACvC;QACJ;MACJ;IAAC;MAAAlG,GAAA;MAAAP,KAAA,EACD,SAAAyE,aAAaiC,SAAS,EAAE;QACpB,IAAMC,gBAAgB,GAAG,IAAI,CAACxD,cAAc;QAC5C,IAAI,CAACA,cAAc,GAAGhF,sBAAsB,CAACuI,SAAS,EAAE,IAAI,CAAC1D,sBAAsB,EAAE2D,gBAAgB,CAAC;QAEtG,IAAIA,gBAAgB,KAAK,IAAI,CAACxD,cAAc,EAAE;UAS1CwD,gBAAgB,IAAIA,gBAAgB,CAAC9B,QAAQ,CAAC,CAAC;QACnD;MACJ;IAAC;MAAAtE,GAAA;MAAAP,KAAA,EACD,SAAAJ,kBAAkBC,KAAK,EAAE;QACrB,IAAIyF,EAAE,EAAEsB,EAAE;QACV,IAAI9E,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACmB,cAAc,EAAE;UAE1EnB,OAAO,CAACmB,cAAc,CAAC,IAAI,CAACF,UAAU,EAAElD,KAAK,CAAC;QAClD,CAAC,MACI;UAED,CAAC+G,EAAE,GAAG,CAACtB,EAAE,GAAG,IAAI,CAACvC,UAAU,MAAM,IAAI,IAAIuC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACrC,cAAc,MAAM,IAAI,IAAI2D,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACpE,IAAI,CAAC8C,EAAE,EAAEzF,KAAK,CAAC;QAChJ;MACJ;IAAC;MAAAU,GAAA;MAAAP,KAAA,EACD,SAAAmF,mBAAA,EAAqB;QACjB,IAAMxF,OAAO,GAAG/B,cAAc,CAAC,IAAI,CAAC;QACpCyB,YAAY,CAACwH,GAAG,CAAClH,OAAO,EAAE,IAAI,CAAC;QAC/B,IAAIN,YAAY,CAACyH,IAAI,KAAK,CAAC,EAAE;UACzB/I,sBAAsB,CAACgJ,WAAW,CAAC,yBAAyB,EAAExH,QAAQ,CAAC;QAC3E;MACJ;IAAC;MAAAgB,GAAA;MAAAP,KAAA,EACD,SAAAoF,sBAAA,EAAwB;QAAA,IAAA4B,MAAA;QACpB,IAAI1B,EAAE,EAAEsB,EAAE,EAAEK,EAAE;QACd,IAAMjG,MAAM,GAAG,IAAI,CAACnB,KAAK,CAACqB,KAAK,GACzBH,kBAAkB,CAACP,YAAY,CAAC,IAAI,CAACX,KAAK,CAACqB,KAAK,CAAC,CAAC,GAClD,EAAE;QACR,IAAMgG,UAAU,GAAG,IAAI,CAACxE,OAAO;QAC/B,IAAI,CAACA,OAAO,GAAG1B,MAAM;QACrB,IAAMmG,iBAAiB,GAAG,IAAI,CAACC,cAAc;QAC7C,IAAI,CAACA,cAAc,GAAG,IAAI,CAACvH,KAAK,CAACoG,aAAa;QAC9C,IAAItG,OAAO;QACX,IAAI0H,QAAQ;QACZ,IAAIxJ,QAAQ,CAACkI,EAAE,KAAK,KAAK,EAAE;UACvBpG,OAAO,GAAG/B,cAAc,CAAC,IAAI,CAAC;UAC9ByJ,QAAQ,GAAG,IAAI;QACnB,CAAC,MACI;UAED,IAAMC,YAAY,GAAG9I,UAAU,CAAC+I,2BAA2B,CAAC,IAAI,CAAC;UACjE,IAAI,CAACD,YAAY,EAAE;YACf,MAAM,IAAIE,KAAK,CAAC,yEAAyE,CAAC;UAC9F;UAEA7H,OAAO,GAAG2H,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACG,UAAU;UAK7FJ,QAAQ,GAAG,CAAC/B,EAAE,GAAGgC,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACI,UAAU,MAAM,IAAI,IAAIpC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACqC,eAAe;UAE7J,IAAMC,mBAAmB,GAAG,CAAC,CAAChB,EAAE,GAAG,IAAI,CAAC/G,KAAK,CAACoG,aAAa,MAAM,IAAI,IAAIW,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACzF,eAAe,KAAKH,MAAM,CAAC6G,MAAM;UACtI,IAAID,mBAAmB,KAAKN,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACI,UAAU,CAAC,EAAE;YAC9GnJ,eAAe,CAAC+I,YAAY,CAACI,UAAU,CAAC;UAC5C;QACJ;QACA,IAAI,CAAC/E,QAAQ,GAAGhD,OAAO;QAEvB,IAAIuH,UAAU,EAAE;UAEZ,IAAMY,eAAe,GAAG9G,MAAM,CAAC6G,MAAM,KAAK,CAAC,IACvCX,UAAU,CAACW,MAAM,KAAK,CAAC,IACvBzG,mBAAmB,CAACJ,MAAM,CAAC,CAAC,CAAC,EAAEkG,UAAU,CAAC,CAAC,CAAC,CAAC;UACjD,IAAI,CAACY,eAAe,EAAE;YAAA,IAAAC,KAAA,YAAAA,MAAAC,SAAA,EAEkB;cAChC,IAAMC,SAAS,GAAGjH,MAAM,CAACb,IAAI,CAAC,UAACe,KAAK;gBAAA,OAAKE,mBAAmB,CAACF,KAAK,EAAE8G,SAAS,CAAC;cAAA,EAAC;cAC/E,IAAI,CAACC,SAAS,EAAE;gBACZD,SAAS,CAAC7G,eAAe,CAAC6E,MAAM,CAACrG,OAAO,CAAC;cAC7C;YACJ,CAAC;YALD,KAAK,IAAMqI,SAAS,IAAId,UAAU;cAAAa,KAAA,CAAAC,SAAA;YAAA;UAMtC;QACJ;QACAhH,MAAM,CAACH,OAAO,CAAC,UAACK,KAAK,EAAK;UACtBA,KAAK,CAACC,eAAe,CAACoF,GAAG,CAAC;YAAE7C,GAAG,EAAE/D,OAAO;YAAEuI,IAAI,EAAEb;UAAS,CAAC,CAAC;UAC3D,IAAItI,MAAM,CAAC,CAAC,EAAE;YAOViI,MAAI,CAACnE,aAAa,CAAC7C,KAAK,GAAGK,MAAM,CAAC8H,MAAM,CAAC9H,MAAM,CAAC8H,MAAM,CAAC,CAAC,CAAC,EAAEnB,MAAI,CAACnE,aAAa,CAAC7C,KAAK,CAAC,EAAEkB,KAAK,CAACkH,OAAO,CAACpI,KAAK,CAAC;YAC1GkB,KAAK,CAAC2B,aAAa,CAAC8C,OAAO,GAAGqB,MAAI,CAACnE,aAAa;UACpD;QACJ,CAAC,CAAC;QAEF,IAAIsE,iBAAiB,IACjB,CAAC3F,mBAAmB,CAAC2F,iBAAiB,EAAE,IAAI,CAACtH,KAAK,CAACoG,aAAa,CAAC,EAAE;UACnEkB,iBAAiB,CAAChG,eAAe,CAAC6E,MAAM,CAACrG,OAAO,CAAC;QACrD;QAEA,IAAI,CAACsH,EAAE,GAAG,IAAI,CAACpH,KAAK,CAACoG,aAAa,MAAM,IAAI,IAAIgB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC9F,eAAe,EAAE;UACzF,IAAI,CAACtB,KAAK,CAACoG,aAAa,CAAC9E,eAAe,CAACoF,GAAG,CAAC;YAEzC7C,GAAG,EAAE/D,OAAO;YAEZuI,IAAI,EAAEb;UACV,CAAC,CAAC;QACN;MACJ;IAAC;MAAA9G,GAAA;MAAAP,KAAA,EACD,SAAA4E,mBAAA,EAAqB;QACjB,IAAMjF,OAAO,GAAG/B,cAAc,CAAC,IAAI,CAAC;QACpCyB,YAAY,CAACgJ,MAAM,CAAC1I,OAAO,CAAC;QAC5B,IAAIN,YAAY,CAACyH,IAAI,KAAK,CAAC,EAAE;UACzB/I,sBAAsB,CAACuK,kBAAkB,CAAC,yBAAyB,CAAC;QACxE;MACJ;IAAC;MAAA/H,GAAA;MAAAP,KAAA,EACD,SAAAuI,mBAAmBpC,SAAS,EAAE;QAC1B,IAAI,CAAC1B,YAAY,CAAC,IAAI,CAAC5E,KAAK,CAAC;QAC7B,IAAI,CAACqG,qBAAqB,CAACC,SAAS,CAAC;QACrC,IAAI,CAAChD,cAAc,IAEf,IAAI,CAACA,cAAc,CAAC8B,aAAa,CAAC,IAAI,CAAClC,UAAU,CAAC;QACtD,IAAI,CAACqC,qBAAqB,CAAC,CAAC;MAChC;IAAC;MAAA7E,GAAA;MAAAP,KAAA,EACD,SAAAwI,wBAAwBC,UAAU,EAAE;QAChC,IAAMvH,KAAK,GAAG,CAAC,CAAC;QAChB,KAAK,IAAMX,GAAG,IAAIkI,UAAU,EAAE;UAC1B,IAAMzI,KAAK,GAAGyI,UAAU,CAAClI,GAAG,CAAC;UAC7B,IAAI,CAACR,gBAAgB,CAACC,KAAK,CAAC,EAAE;YAC1BkB,KAAK,CAACX,GAAG,CAAC,GAAGP,KAAK;UACtB,CAAC,MACI,IAAIA,KAAK,YAAY9B,aAAa,EAAE;YAGrCgD,KAAK,CAACX,GAAG,CAAC,GAAGP,KAAK,CAAC0I,cAAc;UACrC;QACJ;QACA,OAAOxH,KAAK;MAChB;IAAC;MAAAX,GAAA;MAAAP,KAAA,EACD,SAAA2I,wBAAwBC,UAAU,EAAE;QAAA,IAAAC,MAAA;QAChC,IAAMhJ,KAAK,GAAG,CAAC,CAAC;QAAC,IAAAiJ,MAAA,YAAAA,OAAA,EACa;UAC1B,IAAM9I,KAAK,GAAG4I,UAAU,CAACrI,GAAG,CAAC;UAC7B,IAAIA,GAAG,KAAK,OAAO,EAAE;YACjB,IAAMwI,SAAS,GAAGH,UAAU,CAAC1H,KAAK;YAClC,IAAMF,MAAM,GAAGR,YAAY,CAACuI,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAGA,SAAS,GAAG,EAAE,CAAC;YACxF,IAAMC,cAAc,GAAGhI,MAAM,CAACiI,GAAG,CAAC,UAAC/H,KAAK,EAAK;cACzC,IAAIA,KAAK,IAAIA,KAAK,CAACC,eAAe,EAAE;gBAEhCD,KAAK,CAACK,QAAQ,CAACgF,GAAG,CAACsC,MAAI,CAAC;gBACxB,IAAIA,MAAI,CAACjG,cAAc,EAAE;kBACrBiG,MAAI,CAAC/F,YAAY,GAAGzC,MAAM,CAAC8H,MAAM,CAAC9H,MAAM,CAAC8H,MAAM,CAAC,CAAC,CAAC,EAAEjH,KAAK,CAACkH,OAAO,CAACpI,KAAK,CAAC,EAAEd,iBAAiB,CAACgC,KAAK,CAACkH,OAAO,CAACc,OAAO,CAAC,CAAC;gBACvH;gBACA,OAAOL,MAAI,CAAC/F,YAAY;cAC5B,CAAC,MACI;gBACD,OAAO5B,KAAK;cAChB;YACJ,CAAC,CAAC;YACFrB,KAAK,CAACU,GAAG,CAAC,GAAGsI,MAAI,CAACL,uBAAuB,CAAC1K,UAAU,CAACqL,OAAO,CAACH,cAAc,CAAC,CAAC;UACjF,CAAC,MACI,IAAIzI,GAAG,KAAK,eAAe,EAAE;YAC9B,IAAM6I,YAAY,GAAGR,UAAU,CAAC3C,aAAa;YAC7C,IAAImD,YAAY,CAAChB,OAAO,KAAKzG,SAAS,EAAE;cACpCtB,MAAM,CAACC,IAAI,CAAC8I,YAAY,CAAChB,OAAO,CAACpI,KAAK,CAAC,CAACa,OAAO,CAAC,UAACN,GAAG,EAAK;gBACrD,IAAI+E,EAAE,EAAEsB,EAAE;gBACV/G,KAAK,CAACU,GAAG,CAAC,GAAG,CAAC+E,EAAE,GAAG8D,YAAY,CAAChB,OAAO,MAAM,IAAI,IAAI9C,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACtF,KAAK,CAACO,GAAG,CAAC;gBAC3F,CAACqG,EAAE,GAAGwC,YAAY,CAAC7H,QAAQ,MAAM,IAAI,IAAIqF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACL,GAAG,CAACsC,MAAI,CAAC;cAClF,CAAC,CAAC;YACN;UACJ,CAAC,MACI,IAAI7I,KAAK,YAAYhC,aAAa,EAAE;YAKrC6B,KAAK,CAACU,GAAG,CAAC,GAAGT,aAAa;UAC9B,CAAC,MACI,IAAI2B,GAAG,CAAC,SAAS,EAAEzB,KAAK,CAAC,IAC1BA,KAAK,CAAC2F,OAAO,YAAYvH,mBAAmB,EAAE;YAC9C,IAAI4B,KAAK,CAAC2F,OAAO,CAAC0D,UAAU,CAACxB,MAAM,GAAG,CAAC,EAAE;cACrC7H,KAAK,CAAC2F,OAAO,CAAC0D,UAAU,CAACxI,OAAO,CAAC,UAACyI,SAAS,EAAK;gBAC5CzJ,KAAK,CAACyJ,SAAS,CAAC,GAAG7H,GAAG,CAAC,WAAW,EAAEzB,KAAK,CAAC2F,OAAO,CAAC,GAC5C3F,KAAK,CAAC2F,OAAO,CAAC4D,SAAS,CAACD,SAAS,CAAC,GAClCxJ,aAAa;cACvB,CAAC,CAAC;YACN,CAAC,MACI;cACDD,KAAK,CAACU,GAAG,CAAC,GAAGT,aAAa;YAC9B;UACJ,CAAC,MACI,IAAI,EAAEE,KAAK,YAAY/B,YAAY,CAAC,EAAE;YACvC,IAAIsC,GAAG,KAAK,6BAA6B,IAAI,CAACvB,gBAAgB,CAAC,CAAC,EAAE;cAC9Da,KAAK,CAACU,GAAG,CAAC,GAAGP,KAAK;YACtB;UACJ,CAAC,MACI,IAAIA,KAAK,YAAY9B,aAAa,EAAE;YAGrC2B,KAAK,CAACU,GAAG,CAAC,GAAGP,KAAK,CAAC0I,cAAc;UACrC;QACJ,CAAC;QA5DD,KAAK,IAAMnI,GAAG,IAAIqI,UAAU;UAAAE,MAAA;QAAA;QA6D5B,OAAOjJ,KAAK;MAChB;IAAC;MAAAU,GAAA;MAAAP,KAAA,EACD,SAAAwJ,OAAA,EAAS;QACL,IAAM3J,KAAK,GAAG,IAAI,CAAC8I,uBAAuB,CAAC,IAAI,CAAC9I,KAAK,CAAC;QACtD,IAAId,MAAM,CAAC,CAAC,EAAE;UACVc,KAAK,CAACgD,aAAa,GAAG,IAAI,CAACA,aAAa;QAC5C;QACA,IAAI,IAAI,CAACD,cAAc,EAAE;UACrB,IAAI,CAACA,cAAc,GAAG,KAAK;QAC/B;QACA,IAAM6G,aAAa,GAAG5L,QAAQ,CAAC6L,MAAM,CAAC;UAClCC,GAAG,EAAE,CAAC,CAAC;UACPC,OAAO,EAAE;YAAEC,WAAW,EAAE;UAAM;QAClC,CAAC,CAAC;QACF,OAAQzK,IAAA,CAACyC,SAAS,EAAAiI,aAAA,CAAAA,aAAA,KAAKjK,KAAK;UAAE4D,GAAG,EAAE,IAAI,CAACJ;QAAiB,GAAKoG,aAAa,CAAE,CAAC;MAClF;IAAC;IAAA,OAAAxH,iBAAA;EAAA,EAta2BtE,KAAK,CAACkE,SAAS;EAwa/CI,iBAAiB,CAAC8H,WAAW,2BAAwBlI,SAAS,CAACkI,WAAW,IAAIlI,SAAS,CAACqG,IAAI,IAAI,WAAW,OAAG;EAC9G,OAAOvK,KAAK,CAACqM,UAAU,CAAC,UAACnK,KAAK,EAAE4D,GAAG,EAAK;IACpC,OAAQrE,IAAA,CAAC6C,iBAAiB,EAAA6H,aAAA,CAAAA,aAAA,KAAKjK,KAAK,GAAO4D,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG;MAAEF,YAAY,EAAEE;IAAI,CAAC,CAAG,CAAC;EAC9F,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}