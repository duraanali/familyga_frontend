{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport * as Font from 'expo-font';\nvar useCachedResources = function useCachedResources() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLoadingComplete = _React$useState2[0],\n    setLoadingComplete = _React$useState2[1];\n  React.useEffect(function () {\n    function loadResourcesAndDataAsync() {\n      return _loadResourcesAndDataAsync.apply(this, arguments);\n    }\n    function _loadResourcesAndDataAsync() {\n      _loadResourcesAndDataAsync = _asyncToGenerator(function* () {\n        try {\n          yield Font.loadAsync({\n            \"Hind-Bold\": require(\"../fonts/Hind-Bold.ttf\"),\n            \"Hind-SemiBold\": require(\"../fonts/Hind-SemiBold.ttf\"),\n            \"Hind-Regular\": require(\"../fonts/Hind-Regular.ttf\"),\n            \"Hind-Medium\": require(\"../fonts/Hind-Medium.ttf\"),\n            \"Hind-Light\": require(\"../fonts/Hind-Light.ttf\")\n          });\n        } catch (e) {\n          console.warn(e);\n        } finally {\n          setLoadingComplete(true);\n        }\n      });\n      return _loadResourcesAndDataAsync.apply(this, arguments);\n    }\n    loadResourcesAndDataAsync();\n  }, []);\n  return isLoadingComplete;\n};\nexport default useCachedResources;","map":{"version":3,"names":["React","Font","useCachedResources","_React$useState","useState","_React$useState2","_slicedToArray","isLoadingComplete","setLoadingComplete","useEffect","loadResourcesAndDataAsync","_loadResourcesAndDataAsync","apply","arguments","_asyncToGenerator","loadAsync","require","e","console","warn"],"sources":["/Users/duraanali/Pictures/Familyga App/frontend/src/hooks/useCachedResources.ts"],"sourcesContent":["import * as React from 'react';\nimport * as Font from 'expo-font';\n\nconst useCachedResources = () => {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        // Load fonts\n        await Font.loadAsync({\n\t\t\"Hind-Bold\": require(\"@fonts/Hind-Bold.ttf\"),\n\t\t\"Hind-SemiBold\": require(\"@fonts/Hind-SemiBold.ttf\"),\n\t\t\"Hind-Regular\": require(\"@fonts/Hind-Regular.ttf\"),\n\t\t\"Hind-Medium\": require(\"@fonts/Hind-Medium.ttf\"),\n\t\t\"Hind-Light\": require(\"@fonts/Hind-Light.ttf\"),\n        });\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n};\n\nexport default useCachedResources;\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,IAAI,MAAM,WAAW;AAEjC,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EAC/B,IAAAC,eAAA,GAAgDH,KAAK,CAACI,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA9DI,iBAAiB,GAAAF,gBAAA;IAAEG,kBAAkB,GAAAH,gBAAA;EAG5CL,KAAK,CAACS,SAAS,CAAC,YAAM;IAAA,SACLC,yBAAyBA,CAAA;MAAA,OAAAC,0BAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAF,2BAAA;MAAAA,0BAAA,GAAAG,iBAAA,CAAxC,aAA2C;QACzC,IAAI;UAEF,MAAMb,IAAI,CAACc,SAAS,CAAC;YAC3B,WAAW,EAAEC,OAAO,yBAAuB,CAAC;YAC5C,eAAe,EAAEA,OAAO,6BAA2B,CAAC;YACpD,cAAc,EAAEA,OAAO,4BAA0B,CAAC;YAClD,aAAa,EAAEA,OAAO,2BAAyB,CAAC;YAChD,YAAY,EAAEA,OAAO,0BAAwB;UACvC,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;UACVC,OAAO,CAACC,IAAI,CAACF,CAAC,CAAC;QACjB,CAAC,SAAS;UACRT,kBAAkB,CAAC,IAAI,CAAC;QAC1B;MACF,CAAC;MAAA,OAAAG,0BAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAEDH,yBAAyB,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOH,iBAAiB;AAC1B,CAAC;AAED,eAAeL,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}